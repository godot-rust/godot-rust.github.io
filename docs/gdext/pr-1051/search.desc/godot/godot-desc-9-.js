searchState.loadedDescShard("godot", 9, "Returns the result of rotating this vector by <code>angle</code> (in …\nReturns this vector rotated around <code>axis</code> by <code>angle</code> radians. …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns the transform’s rotation (in radians).\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nThe rows of the matrix. These are <em>not</em> the basis vectors.\nFormats the string to be at least <code>min_length</code> long, by …\nFormats the string to be at least <code>min_length</code> long, by …\nPanics\nPanics\n⚠️ Saves a <code>Resource</code>-inheriting object into the file …\nReturns the transform’s scale.\nIntroduce an additional scaling specified by the given 3D …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nSets the value at the specified index.\nSet a key to a given value.\nSets the alpha channel value as a byte, mapped to the …\nSets the blue channel value as a byte, mapped to the range …\nSet true to use big-endian, false to use little-endian.\nSet the values of the first column of the matrix.\nSet the values of the second column of the matrix.\nSet the values of the third column of the matrix.\nTo set the default parameters, use …\nTo set the default parameters, use …\nSet size based on desired end-point.\nSet size based on desired end-point.\nSet size based on desired end-point.\nSets the green channel value as a byte, mapped to the …\nTo set the default parameters, use <code>Self::set_multiplayer_ex</code>…\nTo set the default parameters, use …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nSets the red channel value as a byte, mapped to the range …\nCalculates the SHA-256 checksum of the file at the given …\nReturns the normalized shortest axis of the AABB.\nReturns the index of the shortest axis of the AABB …\nReturns the scalar length of the shortest axis of the AABB.\nShrinks the array down to <code>new_size</code>.\nShuffles the array such that the items will have a random …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns the signed angle to the given vector, as radians …\nThe size of the rectangle.\nReturns the transform’s skew (in radians).\nAssuming that the matrix is a proper rotation matrix, …\nPanics\nReturns the result of spherical linear interpolation …\nReturns the spherical linear interpolation between the …\nPanics\nReturns a new vector slid along a plane defined by the …\nReturns a new vector slid along a plane defined by the …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the array.\nSorts the array.\nPanics\nPanics\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nSplits the string according to <code>delimiter</code>.\nSplits the string according to <code>delimiter</code>.\nReturns a builder that splits this string into substrings …\nReturns a builder that splits this string into substrings …\nReturns the color converted to the linear color space. …\nTo set the default parameters, use …\nReturn Godot’s string representation of the variant.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new <code>Array</code>.\nReturns a sub-range <code>begin..end</code>, as a new array.\nReturns the range <code>begin..exclusive_end</code> as a new <code>NodePath</code>.\nReturns a substring of this, as another <code>GString</code>.\nReturns a substring of this, as another <code>GString</code>.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nReturns the support point in a given direction. This is …\nAccess vector components in different order.\nTransposed dot product with the X axis (column) of the …\nTransposed dot product with the Y axis (column) of the …\nTransposed dot product with the Z axis (column) of the …\n⚠️ Convert to type <code>T</code>, panicking on failure.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nCreates a <code>[Vector3; 3]</code> with the columns of the <code>Basis</code>.\nReturns a copy of the data converted to a …\nReturns a copy of the data converted to a …\nConverts this type to the Godot type by reference, usually …\n⚠️ Convert <code>Color</code> into <code>ColorHsv</code>.\nReturns the HTML color code representation of this color, …\nReturns the HTML color code representation of this color, …\nReturns a copy of the data converted to a <code>PackedInt32Array</code>…\nReturns a copy of the data converted to a <code>PackedInt64Array</code>…\n⚠️ Convert <code>ColorHsv</code> into <code>Color</code>.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns the color converted to a 32-bit integer (each …\nReturns the color converted to a 64-bit integer (each …\nConvert this RID into a <code>u64</code>. Returns 0 if it is invalid.\nConvert this RID into a <code>u64</code> if it is valid. Otherwise, …\nConverts this type to a Variant.\nConverts this type to a Variant.\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nTo set the default parameters, use <code>Self::tr_ex</code> and its …\nTo set the default parameters, use <code>Self::tr_n_ex</code> and its …\nO(1), non-lexicographic, non-stable ordering relation.\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns the transposed version of the matrix.\nReturn type\nReturn type\nReturn type\nReturn type\nReturn type\nReturn type\n<strong>Downcast</strong> to a more specific Godot class, while retaining …\n<strong>Downcast:</strong> try to convert into a smart pointer to a derived …\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nReturn type\nConverts the Godot representation to this type, returning …\nConstructs an instance ID from an integer, or <code>None</code> if the …\nLooks up the given instance ID and returns the associated …\nConvert from one of GDScript’s <code>Projection.PLANE_*</code> …\nConvert from numbers <code>1</code> and <code>2</code>.\nCreates new <code>GFile</code> from a <code>FileAccess</code> pointer with a …\nPerforms the conversion from a <code>Variant</code>, returning <code>Err</code> on …\nPerforms the conversion from a <code>Variant</code>, returning <code>Err</code> on …\nRetrieves the node at path <code>path</code> (fallible).\nInstantiates the scene as type <code>T</code> (fallible).\nLoads a resource from the filesystem located at <code>path</code>.\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturn type\nReturn type\nSaves a <code>Resource</code>-inheriting object into the file located …\nConvert to type <code>T</code>, returning <code>Err</code> on failure.\nFallible <code>Color</code> conversion into <code>ColorHsv</code>. See also …\nFallible <code>ColorHsv</code> conversion into <code>Color</code>. See also: …\nMakes sure that <code>self</code> does not share references with other …\nReturns a copy of the callable, ignoring <code>args</code> user …\nReturns the Unicode code point (“character”) at …\nReturns the Unicode code point (“character”) at …\nCreates new uninitialized <code>OnEditor&lt;T&gt;</code> with value which …\n<strong>Upcast</strong> to a Godot base, while retaining the <code>D</code> trait object.\n<strong>Upcast:</strong> convert into a smart pointer to a base class. …\n<strong>Upcast exclusive-ref:</strong> access this object as an exclusive …\n<strong>Upcast shared-ref:</strong> access this object as a shared …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nReturns a reference of the value that failed to convert, …\nCreates a new <code>Array</code> containing all the values currently in …\nSpecific property hints, only override if they deviate …\nConstructs <code>VariantArray</code> literals, similar to Rust’s …\nTo set the default parameters, use …\nReturns the dimensions of the viewport plane that this …\nReturns the volume of the AABB.\nThe vector’s W component.\nThe vector’s W component.\nReturns a copy of this color with the given alpha value. …\nCreate a new custom error wrapping an <code>Error</code>.\nCreate a new custom error wrapping an <code>Error</code> and the value …\nWrite <code>PackedStringArray</code> to the file as delimited line.\nWrites <code>f32</code> as the 32 bits in the file.\nWrites <code>f64</code> as the 64 bits in the file.\nWrites string to the file.\nWrite string to the file as a line.\nWrites string to the file as Pascal String.\nWrites a <code>real</code> (<code>f32</code> or <code>f64</code>) as the next 4 or 8 bytes in the …\nWrites <code>u16</code> as the next 2 bytes in the file.\nWrites <code>u32</code> as the next 4 bytes in the file.\nWrites <code>u64</code> as the next 8 bytes in the file.\nWrites <code>u8</code> as the next byte in the file.\nWrite <code>Variant</code> to the file.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nReturns the distance for this Projection beyond which …\nReturns the distance for this Projection before which …\nEuler’s number (e)\nThe Euler-Mascheroni constant (γ)\n1/π\n1/sqrt(2)\n1/sqrt(2π)\n1/sqrt(3)\n1/sqrt(π)\n2/π\n2/sqrt(π)\nπ/2\nπ/3\nπ/4\nπ/6\nπ/8\nln(10)\nln(2)\nlog10(2)\nlog10(e)\nlog2(10)\nlog2(e)\nThe golden ratio (φ)\nArchimedes’ constant (π)\nsqrt(2)\nsqrt(3)\nThe full circle constant (τ)\nDerive macro for <code>Export</code> on enums.\nDerive macro for <code>GodotClass</code> on structs.\nDerive macro for <code>GodotConvert</code> on structs.\nConfiguration for a remote procedure call, used with …\nDerive macro for <code>Var</code> on enums.\nRegister <code>method</code> as a remote procedure call on <code>node</code>.\nReturns the argument unchanged.\nProc-macro attribute to be used with <code>impl</code> blocks of …\nGenerates a <code>Class</code> -&gt; <code>dyn Trait</code> upcasting relation.\nCalls <code>U::from(self)</code>.\nRegistration support for property types.\nReturns a <code>Dictionary</code> populated with the values required …\nMarker trait to identify non-nullable <code>GodotType</code>s that can …\nTrait implemented for types that can be used as <code>#[export]</code> …\nTrait implemented for types that can be used as <code>#[var]</code> …\nThe export info to use for an exported field of this type, …\nFunctions used to translate user-provided arguments into …\nSpecific property hints, only override if they deviate …\nEquivalent to <code>@export_enum</code> in Godot.\nEquivalent to <code>@export_file</code> in Godot.\nEquivalent to <code>@export_flags</code> in Godot.\nEquivalent to <code>@export_global_file</code> in Godot.\nMark an exported numerical value to use the editor’s …\nOpen a file for reading or writing.\n⚠️ Loads a resource from the filesystem located at <code>path</code>…\n⚠️ Saves a <code>Resource</code>-inheriting object into the file …\nA convenience macro for using the <code>Object::tr()</code> and …\nA convenience macro for using the <code>Object::tr_n()</code> and …\nLoads a resource from the filesystem located at <code>path</code>.\nSaves a <code>Resource</code>-inheriting object into the file located …")