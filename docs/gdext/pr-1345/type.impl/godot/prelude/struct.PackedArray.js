(function() {
    var type_impls = Object.fromEntries([["godot",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Default-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Display-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Formats <code>PackedArray</code> to match Godot’s string representation.</p>\n</div></details></div></details>","Display","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Drop-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Export-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Export-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/prelude/trait.Export.html\" title=\"trait godot::prelude::Export\">Export</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.export_hint\" class=\"method trait-impl\"><a href=\"#method.export_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.Export.html#method.export_hint\" class=\"fn\">export_hint</a>() -&gt; <a class=\"struct\" href=\"godot/meta/struct.PropertyHintInfo.html\" title=\"struct godot::meta::PropertyHintInfo\">PropertyHintInfo</a></h4></section></summary><div class='docblock'>The export info to use for an exported field of this type, if no other export info is specified.</div></details></div></details>","Export","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Extend%3CT%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5BT%5D%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3C%26%5BT%5D%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3><div class=\"docblock\"><p>Creates a <code>PackedArray&lt;T&gt;</code> from the given Rust slice.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&[T]>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5BT;+N%5D%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3C%26%5BT;+N%5D%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3><div class=\"docblock\"><p>Creates a <code>PackedArray&lt;T&gt;</code> from a reference to the given Rust array.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&[T; N]>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3><div class=\"docblock\"><p>Creates a <code>PackedArray&lt;T&gt;</code> from the given Rust array.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3CT%3E%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CVec%3CT%3E%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3><div class=\"docblock\"><p>Creates a <code>PackedArray&lt;T&gt;</code> from the given Rust vec.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vec: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<T>>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromGodot-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromGodot-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/prelude/trait.FromGodot.html\" title=\"trait godot::prelude::FromGodot\">FromGodot</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_godot\" class=\"method trait-impl\"><a href=\"#method.try_from_godot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.FromGodot.html#tymethod.try_from_godot\" class=\"fn\">try_from_godot</a>(\n    via: &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"godot/prelude/trait.GodotConvert.html\" title=\"trait godot::prelude::GodotConvert\">GodotConvert</a>&gt;::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;, <a class=\"struct\" href=\"godot/prelude/struct.ConvertError.html\" title=\"struct godot::prelude::ConvertError\">ConvertError</a>&gt;</h4></section></summary><div class='docblock'>Converts the Godot representation to this type, returning <code>Err</code> on failure.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_godot\" class=\"method trait-impl\"><a href=\"#method.from_godot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.FromGodot.html#method.from_godot\" class=\"fn\">from_godot</a>(via: Self::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a>) -&gt; Self</h4></section></summary><div class='docblock'>⚠️ Converts the Godot representation to this type. <a href=\"godot/prelude/trait.FromGodot.html#method.from_godot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_variant\" class=\"method trait-impl\"><a href=\"#method.try_from_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.FromGodot.html#method.try_from_variant\" class=\"fn\">try_from_variant</a>(variant: &amp;<a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"godot/prelude/struct.ConvertError.html\" title=\"struct godot::prelude::ConvertError\">ConvertError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion from a <a href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\"><code>Variant</code></a>, returning <code>Err</code> on failure.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_variant\" class=\"method trait-impl\"><a href=\"#method.from_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.FromGodot.html#method.from_variant\" class=\"fn\">from_variant</a>(variant: &amp;<a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>) -&gt; Self</h4></section></summary><div class='docblock'>⚠️ Performs the conversion from a <a href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\"><code>Variant</code></a>. <a href=\"godot/prelude/trait.FromGodot.html#method.from_variant\">Read more</a></div></details></div></details>","FromGodot","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CT%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3><div class=\"docblock\"><p>Creates a <code>PackedArray&lt;T&gt;</code> from an iterator.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"performance-note\"><a class=\"doc-anchor\" href=\"#performance-note\">§</a>Performance note</h4>\n<p>This uses the lower bound from <code>Iterator::size_hint()</code> to allocate memory up front. If the iterator returns\nmore than that number of elements, it falls back to reading elements into a fixed-size buffer before adding\nthem all efficiently as a batch.</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<ul>\n<li>If the iterator’s <code>size_hint()</code> returns an incorrect lower bound (which is a breach of the <code>Iterator</code> protocol).</li>\n</ul>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GodotConvert-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-GodotConvert-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/prelude/trait.GodotConvert.html\" title=\"trait godot::prelude::GodotConvert\">GodotConvert</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Via\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Via\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" class=\"associatedtype\">Via</a> = <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type through which <code>Self</code> is represented in Godot.</div></details></div></details>","GodotConvert","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Index%3Cusize%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<usize>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3Cusize%3E-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; &amp;mut &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<usize>","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3CColor%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3CColor%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Color.html\" title=\"struct godot::prelude::Color\">Color</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Color.html\" title=\"struct godot::prelude::Color\">Color</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Color.html\" title=\"struct godot::prelude::Color\">Color</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3CGString%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3CGString%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedStringArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3CVector2%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3CVector2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector2.html\" title=\"struct godot::prelude::Vector2\">Vector2</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector2.html\" title=\"struct godot::prelude::Vector2\">Vector2</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector2.html\" title=\"struct godot::prelude::Vector2\">Vector2</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedVector2Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3CVector3%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3CVector3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector3.html\" title=\"struct godot::prelude::Vector3\">Vector3</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector3.html\" title=\"struct godot::prelude::Vector3\">Vector3</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector3.html\" title=\"struct godot::prelude::Vector3\">Vector3</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedVector3Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3CVector4%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3CVector4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector4.html\" title=\"struct godot::prelude::Vector4\">Vector4</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector4.html\" title=\"struct godot::prelude::Vector4\">Vector4</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector4.html\" title=\"struct godot::prelude::Vector4\">Vector4</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedVector4Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3Cf32%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3Cf32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedFloat32Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3Cf64%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedFloat64Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3Ci32%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedInt32Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3Ci64%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedInt64Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDynamicSend-for-PackedArray%3Cu8%3E\" class=\"impl\"><a href=\"#impl-IntoDynamicSend-for-PackedArray%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = ThreadConfined&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.into_dynamic_send\" class=\"method trait-impl\"><a href=\"#method.into_dynamic_send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/task/trait.IntoDynamicSend.html#tymethod.into_dynamic_send\" class=\"fn\">into_dynamic_send</a>(self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"godot/task/trait.IntoDynamicSend.html\" title=\"trait godot::task::IntoDynamicSend\">IntoDynamicSend</a>&gt;::<a class=\"associatedtype\" href=\"godot/task/trait.IntoDynamicSend.html#associatedtype.Target\" title=\"type godot::task::IntoDynamicSend::Target\">Target</a></h4></section></div></details>","IntoDynamicSend","godot::prelude::PackedByteArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CColor%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CColor%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Color.html\" title=\"struct godot::prelude::Color\">Color</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CGString%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CGString%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedStringArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an empty array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a copy of the value at the specified index, or <code>None</code> if out-of-bounds.</p>\n<p>If you know the index is valid, use the <code>[]</code> operator (<code>Index</code>/<code>IndexMut</code> traits) instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the array contains the given value.</p>\n<p><em>Godot equivalent: <code>has</code></em></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.count\" class=\"fn\">count</a>(&amp;self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of times a value is in the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the array.</p>\n<p><em>Godot equivalent: <code>size</code></em></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the array is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the array, removing all elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Appends an element to the end of the array.</p>\n<p><em>Godot equivalent: <code>append</code>, <code>push_back</code></em></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Inserts a new element at a given index in the array.</p>\n<p>The index must be valid, or at the end of the array (<code>index == len()</code>).</p>\n<p>On large arrays, this method is much slower than <a href=\"godot/prelude/struct.PackedArray.html#method.push\" title=\"method godot::prelude::PackedArray::push\"><code>push()</code></a>, as it will move all the array’s elements after the inserted\nelement. The larger the array, the slower <code>insert</code> will be.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Removes and returns the element at the specified index. Similar to <code>remove_at</code> in\nGDScript, but also returns the removed value.</p>\n<p>On large arrays, this method is much slower than <code>pop_back</code> as it will move all the array’s\nelements after the removed element. The larger the array, the slower <code>remove</code> will be.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.fill\" class=\"fn\">fill</a>(&amp;mut self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Assigns the given value to all elements in the array.</p>\n<p>This can be used together with <code>resize</code> to create an array with a given size and initialized elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resize\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.resize\" class=\"fn\">resize</a>(&amp;mut self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Resizes the array to contain a different number of elements.</p>\n<p>If the new size is smaller, elements are removed from the end. If the new size is larger, new elements\nare set to <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" title=\"associated function core::default::Default::default\"><code>Default::default()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.extend_array\" class=\"fn\">extend_array</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Appends another array at the end of this array.</p>\n<p><em>Godot equivalent: <code>append_array</code></em></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vec\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_vec\" class=\"fn\">to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts this array to a Rust vector, making a copy of its contents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subarray\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.subarray\" class=\"fn\">subarray</a>(&amp;self, range: impl <a class=\"trait\" href=\"godot/meta/trait.SignedRange.html\" title=\"trait godot::meta::SignedRange\">SignedRange</a>) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a sub-range <code>begin..end</code>, as a new packed array.</p>\n<p>The values of <code>begin</code> (inclusive) and <code>end</code> (exclusive) will be clamped to the array size.\nTo obtain Rust slices, see <a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice</code></a> and <a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice</code></a>.</p>\n<h5 id=\"usage\"><a class=\"doc-anchor\" href=\"#usage\">§</a>Usage</h5>\n<p>For negative indices, use <a href=\"godot/meta/fn.wrapped.html\" title=\"fn godot::meta::wrapped\"><code>wrapped()</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>array = PackedArray::from([<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>]);\n\n<span class=\"comment\">// If either `begin` or `end` is negative, its value is relative to the end of the array.\n</span><span class=\"kw\">let </span>sub = array.subarray(wrapped(-<span class=\"number\">4</span>..-<span class=\"number\">2</span>));\n<span class=\"macro\">assert_eq!</span>(sub, PackedArray::from([<span class=\"number\">20</span>, <span class=\"number\">30</span>]));\n\n<span class=\"comment\">// If `end` is not specified, the resulting subarray will span to the end of the array.\n</span><span class=\"kw\">let </span>sub = array.subarray(<span class=\"number\">2</span>..);\n<span class=\"macro\">assert_eq!</span>(sub, PackedArray::from([<span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>]));</code></pre></div>\n<p><em>Godot equivalent: <code>slice</code></em></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a shared Rust slice of the array.</p>\n<p>The resulting slice can be further subdivided or converted into raw pointers.</p>\n<p>See also <a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice</code></a> to get exclusive slices, and <a href=\"godot/prelude/struct.PackedArray.html#method.subarray\" title=\"method godot::prelude::PackedArray::subarray\"><code>subarray</code></a> to get a sub-array as a copy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns an exclusive Rust slice of the array.</p>\n<p>The resulting slice can be further subdivided or converted into raw pointers.</p>\n<p>See also <a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice</code></a> to get shared slices, and <a href=\"godot/prelude/struct.PackedArray.html#method.subarray\" title=\"method godot::prelude::PackedArray::subarray\"><code>subarray</code></a> to get a sub-array as a copy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.find\" class=\"fn\">find</a>(&amp;self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;, from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Searches the array for the first occurrence of a value and returns its index, or <code>None</code> if not found.</p>\n<p>Starts searching at index <code>from</code>; pass <code>None</code> to search the entire array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.rfind\" class=\"fn\">rfind</a>(&amp;self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;, from: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Searches the array backwards for the last occurrence of a value and returns its index, or <code>None</code> if not found.</p>\n<p>Starts searching at index <code>from</code>; pass <code>None</code> to search the entire array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bsearch\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.bsearch\" class=\"fn\">bsearch</a>(&amp;self, value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Finds the index of an existing value in a <em>sorted</em> array using binary search.</p>\n<p>If the value is not present in the array, returns the insertion index that would maintain sorting order.</p>\n<p>Calling <code>bsearch()</code> on an unsorted array results in unspecified (but safe) behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the elements in the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Sorts the elements of the array in ascending order.</p>\n<p>This sort is <a href=\"https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\">stable</a>, since elements inside packed arrays are\nindistinguishable. Relative order between equal elements thus isn’t observable.</p>\n</div></details></div></details>",0,"godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CVector2%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CVector2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector2.html\" title=\"struct godot::prelude::Vector2\">Vector2</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedVector2Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CVector3%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CVector3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector3.html\" title=\"struct godot::prelude::Vector3\">Vector3</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedVector3Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3CVector4%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3CVector4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Vector4.html\" title=\"struct godot::prelude::Vector4\">Vector4</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedVector4Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Cf32%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Cf32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedFloat32Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Cf64%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedFloat64Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Ci32%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedInt32Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Ci64%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_byte_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_byte_array\" class=\"fn\">to_byte_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>PackedByteArray</code> with each value encoded as bytes.</p>\n</div></details></div></details>",0,"godot::prelude::PackedInt64Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Cu8%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_u8\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_u8\" class=\"fn\">encode_u8</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>u8</code> as 1 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.to_be_bytes\" title=\"method u8::to_be_bytes\"><code>u8::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_u8\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_u8\" class=\"fn\">decode_u8</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>u8</code> from 1 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html#method.from_be_bytes\" title=\"associated function u8::from_be_bytes\"><code>u8::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_s8\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_s8\" class=\"fn\">encode_s8</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>i8</code> as 1 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.to_be_bytes\" title=\"method i8::to_be_bytes\"><code>i8::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_s8\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_s8\" class=\"fn\">decode_s8</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>i8</code> from 1 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html#method.from_be_bytes\" title=\"associated function i8::from_be_bytes\"><code>i8::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_u16\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_u16\" class=\"fn\">encode_u16</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>u16</code> as 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html#method.to_be_bytes\" title=\"method u16::to_be_bytes\"><code>u16::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_u16\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_u16\" class=\"fn\">decode_u16</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>u16</code> from 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html#method.from_be_bytes\" title=\"associated function u16::from_be_bytes\"><code>u16::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_s16\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_s16\" class=\"fn\">encode_s16</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>i16</code> as 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.to_be_bytes\" title=\"method i16::to_be_bytes\"><code>i16::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_s16\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_s16\" class=\"fn\">decode_s16</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>i16</code> from 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html#method.from_be_bytes\" title=\"associated function i16::from_be_bytes\"><code>i16::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_u32\" class=\"fn\">encode_u32</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>u32</code> as 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html#method.to_be_bytes\" title=\"method u32::to_be_bytes\"><code>u32::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_u32\" class=\"fn\">decode_u32</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>u32</code> from 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html#method.from_be_bytes\" title=\"associated function u32::from_be_bytes\"><code>u32::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_s32\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_s32\" class=\"fn\">encode_s32</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>i32</code> as 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#method.to_be_bytes\" title=\"method i32::to_be_bytes\"><code>i32::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_s32\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_s32\" class=\"fn\">decode_s32</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>i32</code> from 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#method.from_be_bytes\" title=\"associated function i32::from_be_bytes\"><code>i32::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_u64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_u64\" class=\"fn\">encode_u64</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>u64</code> as 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html#method.to_be_bytes\" title=\"method u64::to_be_bytes\"><code>u64::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_u64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_u64\" class=\"fn\">decode_u64</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>u64</code> from 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html#method.from_be_bytes\" title=\"associated function u64::from_be_bytes\"><code>u64::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_s64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_s64\" class=\"fn\">encode_s64</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>i64</code> as 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html#method.to_be_bytes\" title=\"method i64::to_be_bytes\"><code>i64::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_s64\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_s64\" class=\"fn\">decode_s64</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>i64</code> from 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html#method.from_be_bytes\" title=\"associated function i64::from_be_bytes\"><code>i64::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_half\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_half\" class=\"fn\">encode_half</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>f32</code> as 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.to_be_bytes\" title=\"method f32::to_be_bytes\"><code>f32::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_half\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_half\" class=\"fn\">decode_half</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>f32</code> from 2 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.from_be_bytes\" title=\"associated function f32::from_be_bytes\"><code>f32::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_float\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_float\" class=\"fn\">encode_float</a>(&amp;mut self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>f32</code> as 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.to_be_bytes\" title=\"method f32::to_be_bytes\"><code>f32::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_float\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_float\" class=\"fn\">decode_float</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>f32</code> from 4 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.from_be_bytes\" title=\"associated function f32::from_be_bytes\"><code>f32::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_double\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_double\" class=\"fn\">encode_double</a>(\n    &amp;mut self,\n    byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes <code>f64</code> as 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to write the value, and does nothing in that case.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster encoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_mut_slice\" title=\"method godot::prelude::PackedArray::as_mut_slice\"><code>as_mut_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.to_be_bytes\" title=\"method f64::to_be_bytes\"><code>f64::to_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_double\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_double\" class=\"fn\">decode_double</a>(&amp;self, byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes <code>f64</code> from 8 byte(s) at position <code>byte_offset</code>.</p>\n<p>Returns <code>Err</code> if there is not enough space left to read the value. In case Godot has other error conditions for decoding, it may\nreturn zero and print an error.</p>\n<p><strong>Note:</strong> byte order and encoding pattern is an implementation detail. For portable byte representation and faster decoding, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.as_slice\" title=\"method godot::prelude::PackedArray::as_slice\"><code>as_slice()</code></a> and the various Rust standard APIs such as\n<a href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.from_be_bytes\" title=\"associated function f64::from_be_bytes\"><code>f64::from_be_bytes()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_var\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.encode_var\" class=\"fn\">encode_var</a>(\n    &amp;mut self,\n    byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    value: impl <a class=\"trait\" href=\"godot/meta/trait.AsArg.html\" title=\"trait godot::meta::AsArg\">AsArg</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>&gt;,\n    allow_objects: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Encodes a <code>Variant</code> as bytes. Returns number of bytes written, or <code>Err</code> on encoding failure.</p>\n<p>Sufficient space must be allocated, depending on the encoded variant’s size. If <code>allow_objects</code> is false, <a href=\"godot/prelude/struct.VariantType.html#associatedconstant.OBJECT\" title=\"associated constant godot::prelude::VariantType::OBJECT\"><code>VariantType::OBJECT</code></a> values\nare not permitted and will instead be serialized as ID-only. You should set <code>allow_objects</code> to false by default.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_var\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_var\" class=\"fn\">decode_var</a>(\n    &amp;self,\n    byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    allow_objects: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>), <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Decodes a <code>Variant</code> from bytes and returns it, alongside the number of bytes read.</p>\n<p>Returns <code>Err</code> on decoding error. If you store legit <code>NIL</code> variants inside the byte array, use\n<a href=\"godot/prelude/struct.PackedArray.html#method.decode_var_allow_nil\" title=\"method godot::prelude::PackedArray::decode_var_allow_nil\"><code>decode_var_allow_nil()</code></a> instead.</p>\n<h5 id=\"api-design\"><a class=\"doc-anchor\" href=\"#api-design\">§</a>API design</h5>\n<p>Godot offers three separate methods <code>decode_var()</code>, <code>decode_var_size()</code> and <code>has_encoded_var()</code>. That comes with several problems:</p>\n<ul>\n<li><code>has_encoded_var()</code> is practically useless, because it performs the full decoding work and then throws away the variant.\n<code>decode_var()</code> can do all that and more.</li>\n<li>Both <code>has_encoded_var()</code> and <code>decode_var_size()</code> are unreliable. They don’t tell whether an actual variant has been written at\nthe location. They interpret garbage as <code>Variant::nil()</code> and return <code>true</code> or <code>4</code>, respectively. This can very easily cause bugs\nbecause surprisingly, some users may expect that <code>has_encoded_var()</code> returns <em>whether a variant has been encoded</em>.</li>\n<li>The underlying C++ implementation has all the necessary information (whether a variant is there, how big it is and its value) but the\nGDExtension API returns only one info at a time, requiring re-decoding on each call.</li>\n</ul>\n<p>godot-rust mitigates this somewhat, with the following design:</p>\n<ul>\n<li><code>decode_var()</code> treats all <code>NIL</code>s as errors. This is most often the desired behavior, and if not, <code>decode_var_allow_nil()</code> can be used.\nIt’s also the only way to detect errors at all – once you store legit <code>NIL</code> values, you can no longer differentiate them from garbage.</li>\n<li><code>decode_var()</code> returns both the decoded variant and its size. This requires two decoding runs, but only if the variant is actually\nvalid. Again, in many cases, a user needs the size to know where follow-up data in the buffer starts.</li>\n<li><code>decode_var_size()</code> and <code>has_encoded_var()</code> are not exposed.</li>\n</ul>\n<h5 id=\"security\"><a class=\"doc-anchor\" href=\"#security\">§</a>Security</h5>\n<p>You should set <code>allow_objects</code> to <code>false</code> unless you have a good reason not to. Decoding objects (e.g. coming from remote sources)\ncan cause arbitrary code execution.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_var_allow_nil\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decode_var_allow_nil\" class=\"fn\">decode_var_allow_nil</a>(\n    &amp;self,\n    byte_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    allow_objects: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; (<a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Unreliable <code>Variant</code> decoding, allowing <code>NIL</code>.</p>\n<div class=\"warning\">\n<p>This method is highly unreliable and will try to interpret anything into variants, even zeroed memory or random byte patterns.\nOnly use it if you need a 1:1 equivalent of Godot's <code>decode_var()</code> and <code>decode_var_size()</code> functions.</p>\n<p>In the majority of cases, <a href=\"struct.PackedByteArray.html#method.decode_var\" title=\"method godot::builtin::PackedByteArray::decode_var\">\n<code>decode_var()</code></a> is the better choice, as it’s much easier to use correctly. See also its section about the rationale\nbehind the current API design.</p>\n</div>\n<p>Returns a tuple of two elements:</p>\n<ol>\n<li>the decoded variant. This is <a href=\"godot/prelude/struct.Variant.html#method.nil\" title=\"associated function godot::prelude::Variant::nil\"><code>Variant::nil()</code></a> if a valid variant can’t be decoded, or the value is of type <a href=\"godot/prelude/struct.VariantType.html#associatedconstant.OBJECT\" title=\"associated constant godot::prelude::VariantType::OBJECT\"><code>VariantType::OBJECT</code></a>\nand <code>allow_objects</code> is <code>false</code>.</li>\n<li>The number of bytes the variant occupies. This is <code>0</code> if running out of space, but most other failures are not recognized.</li>\n</ol>\n<h5 id=\"security-1\"><a class=\"doc-anchor\" href=\"#security-1\">§</a>Security</h5>\n<p>You should set <code>allow_objects</code> to <code>false</code> unless you have a good reason not to. Decoding objects (e.g. coming from remote sources)\ncan cause arbitrary code execution.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compress\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.compress\" class=\"fn\">compress</a>(\n    &amp;self,\n    compression_mode: <a class=\"struct\" href=\"godot/classes/file_access/struct.CompressionMode.html\" title=\"struct godot::classes::file_access::CompressionMode\">CompressionMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new <code>PackedByteArray</code>, with the data of this array compressed.</p>\n<p>On failure, Godot prints an error and this method returns <code>Err</code>. (Note that any empty results coming from Godot are mapped to <code>Err</code>\nin Rust.)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decompress\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decompress\" class=\"fn\">decompress</a>(\n    &amp;self,\n    buffer_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    compression_mode: <a class=\"struct\" href=\"godot/classes/file_access/struct.CompressionMode.html\" title=\"struct godot::classes::file_access::CompressionMode\">CompressionMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new <code>PackedByteArray</code>, with the data of this array decompressed.</p>\n<p>Set <code>buffer_size</code> to the size of the uncompressed data.</p>\n<p>On failure, Godot prints an error and this method returns <code>Err</code>. (Note that any empty results coming from Godot are mapped to <code>Err</code>\nin Rust.)</p>\n<p><strong>Note:</strong> Decompression is not guaranteed to work with data not compressed by Godot, for example if data compressed with the deflate\ncompression mode lacks a checksum or header.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decompress_dynamic\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.decompress_dynamic\" class=\"fn\">decompress_dynamic</a>(\n    &amp;self,\n    max_output_size: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    compression_mode: <a class=\"struct\" href=\"godot/classes/file_access/struct.CompressionMode.html\" title=\"struct godot::classes::file_access::CompressionMode\">CompressionMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new <code>PackedByteArray</code>, with the data of this array decompressed, and without fixed decompression buffer.</p>\n<p>This method only accepts <code>BROTLI</code>, <code>GZIP</code>, and <code>DEFLATE</code> compression modes.</p>\n<p>This method is potentially slower than <a href=\"godot/prelude/struct.PackedArray.html#method.decompress\" title=\"method godot::prelude::PackedArray::decompress\"><code>decompress()</code></a>, as it may have to re-allocate its output buffer multiple\ntimes while decompressing, whereas <code>decompress()</code> knows its output buffer size from the beginning.</p>\n<p>GZIP has a maximal compression ratio of 1032:1, meaning it’s very possible for a small compressed payload to decompress to a potentially\nvery large output. To guard against this, you may provide a maximum size this function is allowed to allocate in bytes via\n<code>max_output_size</code>. Passing <code>None</code> will allow for unbounded output. If any positive value is passed, and the decompression exceeds that\namount in bytes, then an error will be returned.</p>\n<p>On failure, Godot prints an error and this method returns <code>Err</code>. (Note that any empty results coming from Godot are mapped to <code>Err</code>\nin Rust.)</p>\n<p><strong>Note:</strong> Decompression is not guaranteed to work with data not compressed by Godot, for example if data compressed with the deflate\ncompression mode lacks a checksum or header.</p>\n</div></details></div></details>",0,"godot::prelude::PackedByteArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Cu8%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_string_from_ascii\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get_string_from_ascii\" class=\"fn\">get_string_from_ascii</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section><section id=\"method.get_string_from_utf8\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get_string_from_utf8\" class=\"fn\">get_string_from_utf8</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section><section id=\"method.get_string_from_utf16\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get_string_from_utf16\" class=\"fn\">get_string_from_utf16</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section><section id=\"method.get_string_from_utf32\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get_string_from_utf32\" class=\"fn\">get_string_from_utf32</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section><section id=\"method.get_string_from_wchar\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.get_string_from_wchar\" class=\"fn\">get_string_from_wchar</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section><section id=\"method.hex_encode\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.hex_encode\" class=\"fn\">hex_encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.GString.html\" title=\"struct godot::prelude::GString\">GString</a></h4></section></div></details>",0,"godot::prelude::PackedByteArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedArray%3Cu8%3E\" class=\"impl\"><a href=\"#impl-PackedArray%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;</h3><div class=\"docblock\"><p>Specialized API for <a href=\"godot/prelude/type.PackedByteArray.html\" title=\"type godot::prelude::PackedByteArray\"><code>PackedByteArray</code></a>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_float32_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_float32_array\" class=\"fn\">to_float32_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a copy of the data converted to a <code>PackedFloat32Array</code>, where each block of 4 bytes has been converted to a 32-bit float.</p>\n<p>The size of the input array must be a multiple of 4 (size of 32-bit float). The size of the new array will be <code>byte_array.size() / 4</code>.</p>\n<p>If the original data can’t be converted to 32-bit floats, the resulting data is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_float64_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_float64_array\" class=\"fn\">to_float64_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a copy of the data converted to a <code>PackedFloat64Array</code>, where each block of 8 bytes has been converted to a 64-bit float.</p>\n<p>The size of the input array must be a multiple of 8 (size of 64-bit float). The size of the new array will be <code>byte_array.size() / 8</code>.</p>\n<p>If the original data can’t be converted to 64-bit floats, the resulting data is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_int32_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_int32_array\" class=\"fn\">to_int32_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a copy of the data converted to a <code>PackedInt32Array</code>, where each block of 4 bytes has been converted to a 32-bit integer.</p>\n<p>The size of the input array must be a multiple of 4 (size of 32-bit integer). The size of the new array will be <code>byte_array.size() / 4</code>.</p>\n<p>If the original data can’t be converted to 32-bit integers, the resulting data is undefined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_int64_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"godot/prelude/struct.PackedArray.html#tymethod.to_int64_array\" class=\"fn\">to_int64_array</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a copy of the data converted to a <code>PackedInt64Array</code>, where each block of 8 bytes has been converted to a 64-bit integer.</p>\n<p>The size of the input array must be a multiple of 8 (size of 64-bit integer). The size of the new array will be <code>byte_array.size() / 8</code>.</p>\n<p>If the original data can’t be converted to 64-bit integers, the resulting data is undefined.</p>\n</div></details></div></details>",0,"godot::prelude::PackedByteArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToGodot-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-ToGodot-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/prelude/trait.ToGodot.html\" title=\"trait godot::prelude::ToGodot\">ToGodot</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Pass\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pass\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"godot/prelude/trait.ToGodot.html#associatedtype.Pass\" class=\"associatedtype\">Pass</a> = <a class=\"enum\" href=\"godot/meta/enum.ByRef.html\" title=\"enum godot::meta::ByRef\">ByRef</a></h4></section></summary><div class='docblock'>Whether arguments of this type are passed by value or by reference. <a href=\"godot/prelude/trait.ToGodot.html#associatedtype.Pass\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_godot\" class=\"method trait-impl\"><a href=\"#method.to_godot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.ToGodot.html#tymethod.to_godot\" class=\"fn\">to_godot</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"godot/prelude/trait.GodotConvert.html\" title=\"trait godot::prelude::GodotConvert\">GodotConvert</a>&gt;::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a></h4></section></summary><div class='docblock'>Converts this type to Godot representation, optimizing for zero-copy when possible. <a href=\"godot/prelude/trait.ToGodot.html#tymethod.to_godot\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_godot_owned\" class=\"method trait-impl\"><a href=\"#method.to_godot_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.ToGodot.html#method.to_godot_owned\" class=\"fn\">to_godot_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a><div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Converts this type to owned Godot representation. <a href=\"godot/prelude/trait.ToGodot.html#method.to_godot_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_variant\" class=\"method trait-impl\"><a href=\"#method.to_variant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.ToGodot.html#method.to_variant\" class=\"fn\">to_variant</a>(&amp;self) -&gt; <a class=\"struct\" href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a></h4></section></summary><div class='docblock'>Converts this type to a <a href=\"godot/prelude/struct.Variant.html\" title=\"struct godot::prelude::Variant\">Variant</a>.</div></details></div></details>","ToGodot","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Var-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Var-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/prelude/trait.Var.html\" title=\"trait godot::prelude::Var\">Var</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_property\" class=\"method trait-impl\"><a href=\"#method.get_property\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.Var.html#tymethod.get_property\" class=\"fn\">get_property</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"godot/prelude/trait.GodotConvert.html\" title=\"trait godot::prelude::GodotConvert\">GodotConvert</a>&gt;::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a></h4></section><section id=\"method.set_property\" class=\"method trait-impl\"><a href=\"#method.set_property\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.Var.html#tymethod.set_property\" class=\"fn\">set_property</a>(&amp;mut self, value: &lt;<a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt; as <a class=\"trait\" href=\"godot/prelude/trait.GodotConvert.html\" title=\"trait godot::prelude::GodotConvert\">GodotConvert</a>&gt;::<a class=\"associatedtype\" href=\"godot/prelude/trait.GodotConvert.html#associatedtype.Via\" title=\"type godot::prelude::GodotConvert::Via\">Via</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.var_hint\" class=\"method trait-impl\"><a href=\"#method.var_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"godot/prelude/trait.Var.html#method.var_hint\" class=\"fn\">var_hint</a>() -&gt; <a class=\"struct\" href=\"godot/meta/struct.PropertyHintInfo.html\" title=\"struct godot::meta::PropertyHintInfo\">PropertyHintInfo</a></h4></section></summary><div class='docblock'>Specific property hints, only override if they deviate from <a href=\"godot/meta/trait.GodotType.html#method.property_info\" title=\"associated function godot::meta::GodotType::property_info\"><code>GodotType::property_info</code></a>, e.g. for enums/newtypes.</div></details></div></details>","Var","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<section id=\"impl-ArrayElement-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-ArrayElement-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/meta/trait.ArrayElement.html\" title=\"trait godot::meta::ArrayElement\">ArrayElement</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section>","ArrayElement","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<section id=\"impl-Eq-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section>","Eq","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"],["<section id=\"impl-GodotType-for-PackedArray%3CT%3E\" class=\"impl\"><a href=\"#impl-GodotType-for-PackedArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"godot/meta/trait.GodotType.html\" title=\"trait godot::meta::GodotType\">GodotType</a> for <a class=\"struct\" href=\"godot/prelude/struct.PackedArray.html\" title=\"struct godot::prelude::PackedArray\">PackedArray</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"godot/meta/trait.PackedArrayElement.html\" title=\"trait godot::meta::PackedArrayElement\">PackedArrayElement</a>,</div></h3></section>","GodotType","godot::prelude::PackedByteArray","godot::prelude::PackedStringArray","godot::prelude::PackedInt32Array","godot::prelude::PackedInt64Array","godot::prelude::PackedFloat32Array","godot::prelude::PackedFloat64Array","godot::prelude::PackedVector2Array","godot::prelude::PackedVector3Array","godot::prelude::PackedVector4Array","godot::prelude::PackedColorArray"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[159488]}