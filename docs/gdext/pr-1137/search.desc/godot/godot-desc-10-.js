searchState.loadedDescShard("godot", 10, "<strong>Upcast</strong> to a Godot base, while retaining the <code>D</code> trait object.\n<strong>Upcast:</strong> convert into a smart pointer to a base class. …\n<strong>Upcast exclusive-ref:</strong> access this object as an exclusive …\n<strong>Upcast shared-ref:</strong> access this object as a shared …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nReturns a reference of the value that failed to convert, …\nCreates a new <code>Array</code> containing all the values currently in …\nSpecific property hints, only override if they deviate …\nConstructs <code>VariantArray</code> literals, similar to Rust’s …\nReturns the dimensions of the viewport plane that this …\nReturns the volume of the AABB.\nThe vector’s W component.\nThe vector’s W component.\nReturns a copy of this color with the given alpha value. …\nCreate a new custom error wrapping an <code>Error</code>.\nCreate a new custom error wrapping an <code>Error</code> and the value …\nWrite <code>PackedStringArray</code> to the file as delimited line.\nWrites <code>f32</code> as the 32 bits in the file.\nWrites <code>f64</code> as the 64 bits in the file.\nWrites string to the file.\nWrite string to the file as a line.\nWrites string to the file as Pascal String.\nWrites a <code>real</code> (<code>f32</code> or <code>f64</code>) as the next 4 or 8 bytes in the …\nWrites <code>u16</code> as the next 2 bytes in the file.\nWrites <code>u32</code> as the next 4 bytes in the file.\nWrites <code>u64</code> as the next 8 bytes in the file.\nWrites <code>u8</code> as the next byte in the file.\nWrite <code>Variant</code> to the file.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nReturns the distance for this Projection beyond which …\nReturns the distance for this Projection before which …\nEuler’s number (e)\nThe Euler-Mascheroni constant (γ)\n1/π\n1/sqrt(2)\n1/sqrt(2π)\n1/sqrt(3)\n1/sqrt(π)\n2/π\n2/sqrt(π)\nπ/2\nπ/3\nπ/4\nπ/6\nπ/8\nln(10)\nln(2)\nlog10(2)\nlog10(e)\nlog2(10)\nlog2(e)\nThe golden ratio (φ)\nArchimedes’ constant (π)\nsqrt(2)\nsqrt(3)\nThe full circle constant (τ)\nType-state builder for customizing signal connections.\nDerive macro for <code>Export</code> on enums.\nDerive macro for <code>GodotClass</code> on structs.\nDerive macro for <code>GodotConvert</code> on structs.\nConfiguration for a remote procedure call, used with …\nTrait that is implemented for functions that can be …\nType-safe version of a Godot signal.\nDerive macro for <code>Var</code> on enums.\nInvoke the receiver on the given instance (possibly <code>()</code>) …\nRegister <code>method</code> as a remote procedure call on <code>node</code>.\nConnect a non-member function (global function, associated …\nFully customizable connection setup.\nConnect a method (member function) with any <code>Gd&lt;T&gt;</code> (not <code>self</code>…\nConnect a method (member function) with <code>&amp;mut self</code> as the …\nFinalize the builder.\nEmit the signal with the given parameters.\n<strong>Stage 3:</strong> add one or multiple flags to the connection, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<strong>Stage 1:</strong> global/associated function or closure.\nProc-macro attribute to be used with <code>impl</code> blocks of …\nGenerates a <code>Class</code> -&gt; <code>dyn Trait</code> upcasting relation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<strong>Stage 2:</strong> method taking <code>&amp;self</code>.\n<strong>Stage 2:</strong> method taking <code>&amp;mut self</code>.\n<strong>Stage 3:</strong> Name of the <code>Callable</code>, mostly used for debugging.\n<strong>Stage 1:</strong> prepare for a method taking any <code>Gd&lt;T&gt;</code> object.\n<strong>Stage 1:</strong> prepare for a method taking <code>self</code> (the class …\nRegistration support for property types.\n<strong>Stage 3:</strong> allow signal to be called across threads.\nReturns a <code>Dictionary</code> populated with the values required …\nCreates a fallible future for this signal.\nCreates a future for this signal.\nMarker trait to identify <code>GodotType</code>s that can be directly …\nTrait implemented for types that can be used as <code>#[export]</code> …\nTrait implemented for types that can be used as <code>#[var]</code> …\nThe export info to use for an exported field of this type, …\nFunctions used to translate user-provided arguments into …\nSpecific property hints, only override if they deviate …\nEquivalent to <code>@export_enum</code> in Godot.\nEquivalent to <code>@export_file</code> in Godot.\nEquivalent to <code>@export_flags</code> in Godot.\nEquivalent to <code>@export_global_file</code> in Godot.\nMark an exported numerical value to use the editor’s …\nRuntime-checked <code>Send</code> capability.\nA future that tries to resolve as soon as the provided …\nError that might be returned  by the <code>FallibleSignalFuture</code>.\nConvert a value into a type that is <code>Send</code> at compile-time …\nThe panicking counter part to the <code>FallibleSignalFuture</code>.\nHandle for an active background task.\nCancels the task if it is still pending and does nothing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSynchronously checks if the task is still pending or has …\nCreate a new async background task.\nOpen a file for reading or writing.\n⚠️ Loads a resource from the filesystem located at <code>path</code>…\n⚠️ Saves a <code>Resource</code>-inheriting object into the file …\nA convenience macro for using the <code>Object::tr()</code> and …\nA convenience macro for using the <code>Object::tr_n()</code> and …\nLoads a resource from the filesystem located at <code>path</code>.\nSaves a <code>Resource</code>-inheriting object into the file located …")