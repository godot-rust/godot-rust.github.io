searchState.loadedDescShard("godot", 9, "Acquires a shared reference guard to the trait object <code>D</code>.\nAcquires an exclusive reference guard to the trait object <code>D</code>…\nEmits this signal.\nPanics\nWhether <code>self</code> covers at least the entire area of <code>b</code> (and …\nWhether <code>self</code> covers at least the entire area of <code>b</code> (and …\nReturns <code>true</code> if this <code>Rect2i</code> completely encloses another …\nEncodes <code>f64</code> as 8 byte(s) at position <code>byte_offset</code>.\nEncodes <code>f32</code> as 4 byte(s) at position <code>byte_offset</code>.\nEncodes <code>f32</code> as 2 byte(s) at position <code>byte_offset</code>.\nEncodes <code>i16</code> as 2 byte(s) at position <code>byte_offset</code>.\nEncodes <code>i32</code> as 4 byte(s) at position <code>byte_offset</code>.\nEncodes <code>i64</code> as 8 byte(s) at position <code>byte_offset</code>.\nEncodes <code>i8</code> as 1 byte(s) at position <code>byte_offset</code>.\nEncodes <code>u16</code> as 2 byte(s) at position <code>byte_offset</code>.\nEncodes <code>u32</code> as 4 byte(s) at position <code>byte_offset</code>.\nEncodes <code>u64</code> as 8 byte(s) at position <code>byte_offset</code>.\nEncodes <code>u8</code> as 1 byte(s) at position <code>byte_offset</code>.\nEncodes a <code>Variant</code> as bytes. Returns number of bytes …\nThe end of the <code>Aabb</code> calculated as <code>position + size</code>.\nThe end of the <code>Rect2</code> calculated as <code>position + size</code>.\nThe end of the <code>Rect2i</code> calculated as <code>position + size</code>.\nChecks if the file cursor has read past the end of the …\n⚠️ Returns whether two <code>Gd</code> pointers point to the same …\nRemoves the first occurrence of a value from the array.\nReturns a copy of the string without the specified index …\nReturns a copy of the string without the specified index …\nEvaluates an expression using a GDScript operator.\nReturns a copy of this AABB expanded to include a given …\nReturns a copy of this rectangle expanded to include a …\nReturns a copy of this <code>Rect2i</code> expanded so that the borders …\nThe export info to use for an exported field of this type, …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nCopies all keys and values from <code>other</code> into <code>self</code>.\nReturns the dimensions of the far clipping plane of the …\nCase-sensitive, filename-oriented comparison to another …\nCase-sensitive, filename-oriented comparison to another …\nCase-insensitive, filename-oriented comparison to another …\nCase-insensitive, filename-oriented comparison to another …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nSearches the array for the first occurrence of a value and …\nFind first occurrence of <code>what</code> and return index, or <code>None</code> if …\nFind first occurrence of <code>what</code> and return index, or <code>None</code> if …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nTo set the default parameters, use <code>Self::find_child_ex</code> and …\nTo set the default parameters, use <code>Self::find_children_ex</code> …\nReturns a builder for finding substrings, with various …\nReturns a builder for finding substrings, with various …\nReverse-search a key by its value.\nReturns a copy of this projection, with the signs of the …\nReturns a new vector with all components rounded down …\nReturns a new vector with all components rounded down …\nReturns a new vector with all components rounded down …\nFormats <code>Array</code> to match Godot’s string representation.\nFormats <code>Dictionary</code> to match Godot’s string …\nFormats <code>Aabb</code> to match godot’s display style.\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>Color</code> to match Godot’s string representation.\nFormats <code>Plane</code> to match Godot’s string representation.\nFormats <code>Projection</code> to match Godot’s string …\nFormats <code>Rect2</code> to match Godot’s string representation.\nFormats <code>Rect2i</code> to match Godot’s string representation.\nFormats <code>Rid</code> to match Godot’s string representation.\nFormats the value with the given formatter.  Read more\nFormats the value with the given formatter.  Read more\nFormat a string using substitutions from an array or …\nFormat a string using substitutions from an array or …\nFormat a string using substitutions from an array or …\nFormat a string using substitutions from an array or …\nReturns the horizontal field of view of the projection (in …\nDestroy the manually-managed Godot object.\nDestroy the manually-managed Godot object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts this <code>StringName</code> to a <code>GString</code>.\nConverts this <code>NodePath</code> to a <code>GString</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts this <code>StringName</code> to a <code>NodePath</code>.\nConverts this <code>GString</code> to a <code>NodePath</code>.\nSee also [<code>GString::to_string_name()</code>].\nReturns the argument unchanged.\nConverts this <code>NodePath</code> to a <code>StringName</code>.\nConverts this <code>GString</code> to a <code>StringName</code>.\nCreates a <code>StringName</code> from a static ASCII/Latin-1 <code>c&quot;string&quot;</code>.\nCreate a variant holding a non-nil value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new transform with origin <code>(0,0,0)</code> from this basis.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Transform2D</code> which will rotate by the given …\nCreates a unit Vector2 rotated to the given <code>angle</code> in …\nCreate a new <code>Transform2D</code> which will rotate by <code>angle</code> and …\nCreate a new <code>Transform2D</code> which will rotate by <code>angle</code>, scale …\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreate a <code>Basis</code> from an axis and angle.\nCreates a quaternion from a Vector3 and an angle.\nVariant of <code>OnReady::new()</code>, allowing access to <code>Base</code> when …\nCreate a new basis from 3 column vectors.\nCreate a matrix from four column vectors.\nCreate a new <code>Transform2D</code> with the given column vectors.\nCreate a new transform from 4 matrix-columns.\nCreates a new <code>Plane</code> from normal and origin distance.\nCreate a new <code>Rect2</code> from four reals representing position …\nCreate a new <code>Rect2i</code> from four <code>i32</code>s representing position …\nCreate a new <code>Aabb</code> with the first corner at <code>position</code> and …\nCreate a new <code>Rect2</code> with the first corner at <code>position</code> and …\nCreate a new <code>Rect2i</code> with the first corner at <code>position</code> and …\nCreate a highly configurable callable from Rust.\nCreate a diagonal matrix from the given values.\nCreate a diagonal matrix from the given values.\nCreate a <code>Basis</code> from three angles <code>a</code>, <code>b</code>, and <code>c</code> interpreted …\nCast an <code>f32</code> to a <code>real</code> using <code>as</code>.\nCast an <code>f64</code> to a <code>real</code> using <code>as</code>.\n⚠️ Converts the Godot representation to this type.\n⚠️ Converts the Godot representation to this type.\nConstructs a <code>Color</code> from an HSV profile using Godot’s …\nConstruct from Hue, Saturation and Value.\nConstruct from Hue, Saturation, Value and Alpha.\nConstructs a <code>Color</code> from an HTML color code string. Valid …\n⚠️ Constructs an instance ID from a non-zero integer, …\nCreates a <code>Gd&lt;T&gt;</code> using a function that constructs a <code>T</code> from …\n⚠️ Looks up the given instance ID and returns the …\nVariant of <code>OnReady::new()</code>, loading the resource stored at …\nCreate callable from <strong>single-threaded</strong> Rust function or …\nCreate a callable for the static method …\nVariant of <code>OnReady::new()</code>, fetching the node located at …\nCreate a new <code>Plane</code> through the origin from a normal.\nMoves a user-created object into this smart pointer, …\nCreate a callable for the non-static method …\nCreate a signal for the signal <code>object::signal_name</code>.\nConstructs a <code>Color</code> from an OK HSL profile. The hue (<code>h</code>), …\nCreate a new <code>Plane</code> from a normal and a point in the plane.\nCreates a new <code>Plane</code> from three points, given in clockwise …\nConstructs a <code>Transform3D</code> from a <code>Projection</code> by trimming the …\nCreate a <code>Basis</code> from a <code>Quaternion</code>.\nConstructs a new <code>Color</code> with the given color components, …\nConstructs a new <code>Color</code> with the given components.\nConstructs a new <code>Color</code> with the given components as <code>u16</code> …\nConstructs a new <code>Color</code> with the given components as bytes. …\nConstructs a <code>Color</code> from an RGBE9995 format integer. This …\nConstructs a Quaternion representing the shortest arc …\nCreate a new basis from 3 row vectors. These are <em>not</em> basis …\nCreate a diagonal matrix from the given values.\nCreates new <code>OnEditor&lt;T&gt;</code> with a value that is considered …\nConstructs a <code>Color</code> from a string, which can be either:\nCreate callable from <strong>thread-safe</strong> Rust function or closure.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nConstructs a new <code>Color</code> from a 32-bits value with the given …\nConstructs a new <code>Color</code> from a 64-bits value with the given …\n⚠️ Performs the conversion from a <code>Variant</code>.\n⚠️ Performs the conversion from a <code>Variant</code>.\nCreate a callable for a method on any <code>Variant</code>.\nReturns the first element in the array, or <code>None</code> if the …\nThe color’s green component.\nReturns the green channel value as a byte. If <code>self.g</code> is …\nProc-macro attribute to be used in combination with the …\nReturns the value at the specified index, or <code>None</code> if the …\nReturns the value for the given key, or <code>None</code>.\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nGet number of bound arguments.\nTo set the default parameters, use <code>Self::get_child_ex</code> and …\nTo set the default parameters, use <code>Self::get_child_count_ex</code>…\nTo set the default parameters, use <code>Self::get_children_ex</code> …\nReturns the rotation of the matrix in euler angles, with …\nReturns the rotation of the matrix in euler angles, with …\nReturns the rotation of the matrix in euler angles.\nReturns the rotation of the matrix in euler angles.\nTo set the default parameters, use <code>Self::get_index_ex</code> and …\nTo set the default parameters, use <code>Self::get_meta_ex</code> and …\nTo set the default parameters, use <code>Self::get_multiplayer_ex</code>…\nReturns the node name at position <code>index</code>.\nReturns the number of node names in the path. Property …\n⚠️ Retrieves the node at path <code>path</code>, panicking if not …\nReturns the value at the key in the dictionary, or <code>NIL</code> …\nTo set the default parameters, use <code>Self::get_path_to_ex</code> …\nReturns the number of pixels with the given pixel width …\nReturns the clipping plane of this Projection whose index …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever <code>get()</code> is called or Godot gets the value of …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCalled whenever Godot <code>get_property_list()</code> is called, the …\nCreates a <code>Quaternion</code> representing the same rotation as …\nReturns the scale of the matrix.\nSplits the string using a string delimiter and returns the …\nSplits the string using a string delimiter and returns the …\nReturns the total number of slices, when the string is …\nReturns the total number of slices, when the string is …\nSplits the string using a Unicode char <code>delimiter</code> and …\nSplits the string using a Unicode char <code>delimiter</code> and …\nReturns the node subname (property) at position <code>index</code>.\nReturns the number of property names (“subnames”) in …\nReturns the total number of names + subnames.\nReturns the type that is currently held by this variant.\nProc-macro attribute to be used with <code>impl</code> blocks of …\nGenerates a <code>Class</code> -&gt; <code>dyn Trait</code> upcasting relation.\nPushes an error message to Godot’s built-in debugger and …\nPrints to the Godot console.\nPrints to the Godot console. Supports BBCode, color and …\nLogs a script error to Godot’s built-in debugger and to …\nPushes a warning message to Godot’s built-in debugger …\nReturns a copy of the AABB grown by the specified <code>amount</code> …\nReturns a copy of the Rect2 grown by the specified <code>amount</code> …\nReturns a copy of the <code>Rect2i</code> grown by the specified <code>amount</code> …\nReturns a copy of the Rect2 grown by the specified amount …\nReturns a copy of the <code>Rect2i</code> grown by the specified amount …\nReturns a copy of the <code>Rect2</code> grown by the specified <code>amount</code> …\nReturns a copy of the <code>Rect2i</code> grown by the specified <code>amount</code> …\nReturns true if at least one of the size’s components …\nReturns <code>true</code> if the Rect2 has area, and <code>false</code> if the Rect2 …\nReturns <code>true</code> if the <code>Rect2i</code> has area, and <code>false</code> if the …\nReturns if this bounding box has a surface or a length, …\nReturns true if the AABB has a volume, and false if the …\nReturns the 32-bit hash value of this callable’s object.\nReturns a 32-bit integer hash value representing the array …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturn Godot’s hash value for the variant.\n⚠️ Hashes this object based on its instance ID.\n⚠️ Hashes this object based on its instance ID.\nReturns whether <code>Self</code> inherits from <code>U</code>.\nReturns whether <code>Self</code> inherits from <code>U</code>.\nInitializes invalid <code>OnEditor&lt;T&gt;</code> with given value.\nRuns manual initialization.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\nGodot constructor, accepting an injected <code>base</code> object.\n⚠️ Inserts a new element before the index. The index …\nInsert a value at the given key, returning the previous …\nReturns a copy of the string with an additional string …\nReturns a copy of the string with an additional string …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\n⚠️ Returns the instance ID of this object (panics when …\nReturns the last known, possibly invalid instance ID of …\nTo set the default parameters, use <code>Self::instantiate_ex</code> …\n⚠️ Instantiates the scene as type <code>T</code>, panicking if not …\nReturns a transform interpolated between this transform …\nReturns a transform interpolated between this transform …\nReturns the intersection between two AABBs.\nReturns the intersection of this Rect2 and <code>b</code>. If the …\nReturns the intersection of this <code>Rect2i</code> and <code>b</code>.\nFinds the intersection point of three planes.\nReturns the point where the given (infinite) ray …\nFinds the intersection point of the plane with a ray.\nFinds the intersection point of the plane with a line …\nChecks whether two AABBs have at least one point in common.\nChecks whether two rectangles have at least one point in …\nReturns <code>true</code> if the <code>Rect2i</code> overlaps with <code>b</code> (i.e. they have …\nChecks whether two AABBs have at least one <em>inner</em> point in …\nChecks whether two rectangles have at least one <em>inner</em> …\nReturns <code>true</code> if the AABB is on both sides of a plane.\nReturns <code>true</code> if the given ray intersects with this AABB. …\nReturns <code>true</code> if the given ray intersects with this AABB. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpgrades to a <code>DynGd&lt;T, D&gt;</code> pointer, enabling the <code>D</code> …\nConverts error into generic error type. It is useful to …\nDowngrades to a <code>Gd&lt;T&gt;</code> pointer, abandoning the <code>D</code> …\nRetrieve inner pointer to the <code>FileAccess</code>.\nTurns the array into a shallow-immutable array.\nTurns the dictionary into a shallow-immutable dictionary.\nCreates an invalid/empty object that cannot be called.\nCreates an invalid/empty signal that cannot be called.\nCreates a new <code>Plane</code> with default values. This new <code>Plane</code> …\nReturns the inverse of the matrix.\nReturns a Projection that performs the inverse of this …\nReturns the color with its <code>r</code>, <code>g</code>, and <code>b</code> components inverted:\nInvokes the callable with the given arguments as <code>Variant</code> …\nCheck endianness of current file access.\nReturns <code>true</code> if the specified <code>Callable</code> is connected to …\nReturns true if this callable is a custom callable.\nReturns <code>true</code> if the array is empty.\nReturns true if the dictionary is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if this AABB is finite, by calling …\nReturns <code>true</code> if this basis is finite. Meaning each element …\nReturns <code>true</code> if the plane is finite by calling <code>is_finite</code> …\nReturns <code>true</code> if this Rect2 is finite, by calling …\nReturns <code>true</code> if this transform is finite, by calling …\nReturns true if this transform is finite by calling …\nReturns true if each component of this vector is finite.\nReturns true if each component of this vector is finite.\nReturns true if each component of this vector is finite.\nChecks if this smart pointer points to a live object (read …\nReturns <code>true</code> if this is an invalid RID.\nReturns <code>true</code> if either of the coordinates of this <code>Rect2i</code>s …\nChecks whether the variant is empty (<code>null</code> value in …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns true if this callable has no target to call the …\nReturns <code>true</code> if the signal’s name does not exist in its …\nReturns <code>true</code> if this Projection performs an orthogonal …\nReturns <code>true</code> if <code>point</code> is located above the plane.\nReturns true if the array is read-only.\nReturns true if the dictionary is read-only.\nReturns if the obj being referred-to is inheriting …\nReturns true if the callable’s object exists and has a …\nReturns whether the callable is considered valid.\nReturns whether the callable is considered valid.\nReturns <code>true</code> if this is a valid RID.\nReturns <code>true</code> if this vector’s values are approximately …\nReturns <code>true</code> if this vector’s values are approximately …\nReturns <code>true</code> if this vector’s values are approximately …\nReturns an iterator over the elements of the <code>Array</code>. Note …\nReturns an iterator over the key-value pairs of the …\nReturns a Projection with the X and Y values from the …\nCreates a new <code>Array</code> containing all the keys currently in …\nReturns an iterator over the keys in a <code>Dictionary</code>.\nReturns the number of elements in the array. Equivalent of …\nReturns the number of entries in the dictionary.\nNumber of characters in the string.\nNumber of characters in the string.\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nGet file length in bytes.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nReturns the linear interpolation between <code>self</code>’s …\nReturns the result of the linear interpolation between …\nReturns the result of the linear interpolation between …\nReturns the result of the linear interpolation between …\nCreates a new color resulting by making this color lighter …\nReturns the vector with a maximum length by limiting its …\nReturns the vector with a maximum length by limiting its …\nReturns the color converted to the sRGB color space. This …\n⚠️ Loads a resource from the filesystem located at <code>path</code>…\nReturns the factor by which the visible level of detail is …\nReturns the normalized longest axis of the AABB.\nReturns the index of the longest axis of the AABB …\nReturns the scalar length of the longest axis of the AABB.\nTo set the default parameters, use <code>Self::look_at_ex</code> and …\nTo set the default parameters, use …\nIf <code>use_model_front</code> is true, the +Z axis (asset front) is …\nDynamically checks if the instance behind the ID exists.\nFormats the string to be at least <code>min_length</code> long, by …\nFormats the string to be at least <code>min_length</code> long, by …\nReturns the light intensity of the color, as a value …\nLeave uninitialized, expects manual initialization during …\nSimple expression match (also called “glob” or “…\nSimple expression match (also called “glob” or “…\nSimple <strong>case-insensitive</strong> expression match (also called “…\nSimple <strong>case-insensitive</strong> expression match (also called “…\nReturns the maximum value contained in the array if all …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nCalculates the MD5 checksum of the file at the given path.\nReturns a larger AABB that contains this AABB and <code>b</code>.\nReturns a larger rectangle that contains this <code>Rect2</code> and <code>b</code>.\nReturns a larger <code>Rect2i</code> that contains this <code>Rect2i</code> and <code>b</code>.\nReturns the name of the method represented by this …\nReturns the minimum value contained in the array if all …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nGet last modified time as a Unix timestamp.\nTo set the default parameters, use <code>Self::move_local_x_ex</code> …\nTo set the default parameters, use <code>Self::move_local_y_ex</code> …\nReturns a new vector moved toward <code>to</code> by the fixed <code>delta</code> …\nReturns a new vector moved toward <code>to</code> by the fixed <code>delta</code> …\nApplies the quaternion’s rotation to the 3D point …\nTransforms each coordinate in <code>rhs.position</code> and <code>rhs.end()</code> …\nTransforms each coordinate in <code>rhs.position</code> and <code>rhs.end()</code> …\nReturns the name of the signal.\nCase-sensitive, <strong>natural-order</strong> comparison to another string.\nCase-sensitive, <strong>natural-order</strong> comparison to another string.\nCase-insensitive, <strong>natural-order</strong> comparison to another …\nCase-insensitive, <strong>natural-order</strong> comparison to another …\nReturns the negative value of the plane by flipping both …\nConstructs an empty <code>Array</code>.\nConstructs an empty <code>Dictionary</code>.\nConstruct a new empty <code>GString</code>.\nCreate a new <code>Aabb</code> from a position and a size.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nCreates a new <code>Plane</code> from the <code>normal</code> and the distance from …\nCreate a new projection from a list of column vectors.\nCreate a new <code>Rect2</code> from a position and a size.\nCreate a new <code>Rect2i</code> from a position and a size.\nCreate a new RID.\nCreate a new transform from a <code>Basis</code> and a <code>Vector3</code>.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nConstruct with a user-defined message.\nSchedule automatic initialization before <code>ready()</code>.\nCreate an empty variant (<code>null</code> value in GDScript).\nCase-<strong>insensitive</strong>, lexicographic comparison to another …\nCase-<strong>insensitive</strong>, lexicographic comparison to another …\nNormal vector pointing away from the plane.\nClamps all components to a usually valid range <code>0.0..=1.0</code>.\nReturns a copy of the plane with its <code>normal</code> and <code>d</code> scaled …\nPanics\n⚠️ Returns the vector scaled to unit length.\n⚠️ Returns the vector scaled to unit length.\n⚠️ Returns the vector scaled to unit length.\nTransforms the <code>ColorHsv</code> into one with values clamped to …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nTransforms the <code>ColorHsv</code> into one with <strong>Hue</strong> value wrapped …\n⚠️ Sends a Godot notification to all classes inherited …\n⚠️ Sends a Godot notification to all classes inherited …\n⚠️ Sends a Godot notification to all classes inherited …\n⚠️ Like <code>Self::notify()</code>, but starts at the most-derived …\n⚠️ Like <code>Self::notify()</code>, but starts at the most-derived …\n⚠️ Like <code>Self::notify()</code>, but starts at the most-derived …\nRepresents <code>null</code> when passing an object argument to Godot.\nReturns the object on which this callable is called.\nReturns the object to which this signal belongs.\nReturns the ID of this callable’s object, see also …\nReturns the ID of this signal’s object, see also …\nFor variants holding an object, returns the object’s …\nFor variants holding an object, returns the object’s …\nReturns the Vector3 from an octahedral-compressed form …\nReturns the octahedral-encoded (oct32) form of this <code>Vector3</code>…\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nCalled when the object receives a Godot notification.\nOpen a file.\nOpen a compressed file.\nOpen a file encrypted by byte key.\nOpen a file encrypted by password.\nThe origin of the transform. The coordinate space defined …\nThe new origin of the transformed coordinate system.\nReturns a perpendicular vector rotated 90 degrees …\n⚠️ Returns the orthonormalized version of the matrix …\nReturns the transform with the basis orthogonal (90 …\nReturns the transform with the basis orthogonal (90 …\nReturns the outer product with <code>with</code>.\nFormats the string representing a number to have an exact …\nFormats the string representing a number to have an exact …\nFormats the string representing a number to have an exact …\nFormats the string representing a number to have an exact …\nGet path of the opened file.\nGet absolute path of the opened file.\nReturns a Projection with the near clipping distance …\nReturns a random element from the array, or <code>None</code> if it is …\nRemoves and returns the last element of the array. Returns …\nRemoves and returns the first element of the array, in …\nReturns the current cursor position.\nThe position of the rectangle.\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nReturns the orthogonal projection of <code>point</code> to the plane.\nReturns the result of projecting the vector onto the given …\nReturns the result of projecting the vector onto the given …\nTo set the default parameters, use <code>Self::propagate_call_ex</code> …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nCalled by Godot to tell if a property has a custom revert …\nAppends an element to the end of the array.\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAdds an element at the beginning of the array, in O(n).\nTo set the default parameters, use <code>Self::quit_ex</code> and its …\nThe color’s red component.\nReturns the red channel value as a byte. If <code>self.r</code> is …\nReads the whole file as UTF-8 <code>GString</code>.\nReads the next line of the file in delimiter-separated …\nReads the next 4 bytes from file as <code>f32</code>.\nReads the next 8 bytes from file as <code>f64</code>.\nReads the next line of the file as <code>GString</code>.\nReads a Pascal string (length-prefixed) from the current …\nReads the next 4 or 8 bytes from file as <code>real</code>, depending …\nReads the next 2 bytes from the file as <code>u16</code>.\nReads the next 4 bytes from the file as <code>u32</code>.\nReads the next 8 bytes from the file as <code>u64</code>.\nReads the next byte from the file as <code>u8</code>.\nReads the next <code>Variant</code> value from file.\nFloating point type used for many structs and functions in …\nA macro to coerce float-literals into the <code>real</code> type.\nRe-export of <code>std::f32::consts</code> or <code>std::f64::consts</code>, …\nArray of reals.\nReturns the reciprocal (inverse) of the vector. This is …\nReturns the reciprocal (inverse) of the vector. This is …\nReturns the result of reflecting the vector defined by the …\nReturns the result of reflecting the vector defined by the …\n⚠️ Removes and returns the element at the specified …\nRemoves a key from the map, and returns the value …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nTo set the default parameters, use <code>Self::reparent_ex</code> and …\nTo set the default parameters, use <code>Self::replace_by_ex</code> and …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nIntroduce an additional rotation around the given <code>axis</code> by …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns the result of rotating this vector by <code>angle</code> (in …\nReturns this vector rotated around <code>axis</code> by <code>angle</code> radians. …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns the transform’s rotation (in radians).\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nThe rows of the matrix. These are <em>not</em> the basis vectors.\nFormats the string to be at least <code>min_length</code> long, by …\nFormats the string to be at least <code>min_length</code> long, by …\nPanics\nPanics\n⚠️ Saves a <code>Resource</code>-inheriting object into the file …\nReturns the transform’s scale.\nIntroduce an additional scaling specified by the given 3D …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nSets the value at the specified index.\nSet a key to a given value.\nSets the alpha channel value as a byte, mapped to the …\nSets the blue channel value as a byte, mapped to the range …\nSet true to use big-endian, false to use little-endian.\nSet the values of the first column of the matrix.\nSet the values of the second column of the matrix.\nSet the values of the third column of the matrix.\nSet size based on desired end-point.\nSet size based on desired end-point.\nSet size based on desired end-point.\nSets the green channel value as a byte, mapped to the …\nTo set the default parameters, use <code>Self::set_multiplayer_ex</code>…\nTo set the default parameters, use …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nCalled whenever Godot <code>set()</code> is called or Godot sets the …\nSets the red channel value as a byte, mapped to the range …\nCalculates the SHA-256 checksum of the file at the given …\nReturns the normalized shortest axis of the AABB.\nReturns the index of the shortest axis of the AABB …\nReturns the scalar length of the shortest axis of the AABB.\nShrinks the array down to <code>new_size</code>.\nShuffles the array such that the items will have a random …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nAccess user-defined signals of this object.\nReturns the signed angle to the given vector, as radians …\nThe size of the rectangle.\nReturns the transform’s skew (in radians).\nAssuming that the matrix is a proper rotation matrix, …\nPanics\nReturns the result of spherical linear interpolation …\nReturns the spherical linear interpolation between the …\nPanics\nReturns a new vector slid along a plane defined by the …\nReturns a new vector slid along a plane defined by the …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the array.\nSorts the array, using a type-safe comparator.\nSorts the array, using type-unsafe <code>Callable</code> comparator.\nPanics\nPanics\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nSplits the string according to <code>delimiter</code>.\nSplits the string according to <code>delimiter</code>.\nReturns a builder that splits this string into substrings …\nReturns a builder that splits this string into substrings …\nReturns the color converted to the linear color space. …\nReturn Godot’s string representation of the variant.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new <code>Array</code>.\nReturns a sub-range <code>begin..end</code>, as a new array.\nReturns the range <code>begin..exclusive_end</code> as a new <code>NodePath</code>.\nReturns a substring of this, as another <code>GString</code>.\nReturns a substring of this, as another <code>GString</code>.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nReturns the support point in a given direction. This is …\nAccess vector components in different order.\nTransposed dot product with the X axis (column) of the …\nTransposed dot product with the Y axis (column) of the …\nTransposed dot product with the Z axis (column) of the …\n⚠️ Convert to type <code>T</code>, panicking on failure.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nCreates a <code>[Vector3; 3]</code> with the columns of the <code>Basis</code>.\nCreates a fallible future for this signal.\nReturns a copy of the data converted to a …\nReturns a copy of the data converted to a …\nCreates a future for this signal.\nConverts this type to the Godot type by reference, usually …\n⚠️ Convert <code>Color</code> into <code>ColorHsv</code>.\nReturns the HTML color code representation of this color, …\nReturns the HTML color code representation of this color, …\nReturns a copy of the data converted to a <code>PackedInt32Array</code>…\nReturns a copy of the data converted to a <code>PackedInt64Array</code>…\n⚠️ Convert <code>ColorHsv</code> into <code>Color</code>.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nString representation of the Godot instance.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns the color converted to a 32-bit integer (each …\nReturns the color converted to a 64-bit integer (each …\nConvert this RID into a <code>u64</code>. Returns 0 if it is invalid.\nConvert this RID into a <code>u64</code> if it is valid. Otherwise, …\nConverts this type to a Variant.\nConverts this type to a Variant.\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nTo set the default parameters, use <code>Self::tr_ex</code> and its …\nTo set the default parameters, use <code>Self::tr_n_ex</code> and its …\nO(1), non-lexicographic, non-stable ordering relation.\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns the transposed version of the matrix.\nReturn type\nReturn type\nReturn type\nReturn type\nReturn type\nReturn type\n<strong>Downcast</strong> to a more specific Godot class, while retaining …\n<strong>Downcast:</strong> try to convert into a smart pointer to a derived …\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nReturn type\nConvert string from bytes with given encoding, returning …\nConvert string from bytes with given encoding, returning …\nConvert string from C-string with given encoding, …\nConvert string from bytes with given encoding, returning …\nConverts the Godot representation to this type, returning …\nConstructs an instance ID from an integer, or <code>None</code> if the …\nLooks up the given instance ID and returns the associated …\nConvert from one of GDScript’s <code>Projection.PLANE_*</code> …\nConvert from numbers <code>1</code> and <code>2</code>.\nCreates new <code>GFile</code> from a <code>FileAccess</code> pointer with a …\nPerforms the conversion from a <code>Variant</code>, returning <code>Err</code> on …\nPerforms the conversion from a <code>Variant</code>, returning <code>Err</code> on …\nRetrieves the node at path <code>path</code> (fallible).\nInstantiates the scene as type <code>T</code> (fallible).\nLoads a resource from the filesystem located at <code>path</code>.\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturn type\nReturn type\nSaves a <code>Resource</code>-inheriting object into the file located …\nConvert to type <code>T</code>, returning <code>Err</code> on failure.\nFallible <code>Color</code> conversion into <code>ColorHsv</code>. See also …\nFallible <code>ColorHsv</code> conversion into <code>Color</code>. See also: …\nMakes sure that <code>self</code> does not share references with other …\nReturns a copy of the callable, ignoring <code>args</code> user …\nReturns the Unicode code point (“character”) at …\nReturns the Unicode code point (“character”) at …\n<strong>Upcast</strong> to a Godot base, while retaining the <code>D</code> trait object.\n<strong>Upcast:</strong> convert into a smart pointer to a base class. …\n<strong>Upcast exclusive-ref:</strong> access this object as an exclusive …\n<strong>Upcast shared-ref:</strong> access this object as a shared …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nCalled whenever Godot retrieves value of property. Allows …\nReturns a reference of the value that failed to convert, …\nCreates a new <code>Array</code> containing all the values currently in …\nSpecific property hints, only override if they deviate …\nConstructs <code>VariantArray</code> literals, similar to Rust’s …\nReturns the dimensions of the viewport plane that this …\nReturns the volume of the AABB.\nThe vector’s W component.\nThe vector’s W component.\nReturns a copy of this color with the given alpha value. …\nCreate a new custom error wrapping an <code>Error</code>.\nCreate a new custom error wrapping an <code>Error</code> and the value …\nWrite <code>PackedStringArray</code> to the file as delimited line.\nWrites <code>f32</code> as the 32 bits in the file.\nWrites <code>f64</code> as the 64 bits in the file.\nWrites string to the file.\nWrite string to the file as a line.\nWrites string to the file as Pascal String.\nWrites a <code>real</code> (<code>f32</code> or <code>f64</code>) as the next 4 or 8 bytes in the …\nWrites <code>u16</code> as the next 2 bytes in the file.\nWrites <code>u32</code> as the next 4 bytes in the file.\nWrites <code>u64</code> as the next 8 bytes in the file.\nWrites <code>u8</code> as the next byte in the file.\nWrite <code>Variant</code> to the file.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nReturns the distance for this Projection beyond which …\nReturns the distance for this Projection before which …\nEuler’s number (e)\nThe Euler-Mascheroni constant (γ)\n1/π\n1/sqrt(2)\n1/sqrt(2π)\n1/sqrt(3)\n1/sqrt(π)\n2/π\n2/sqrt(π)\nπ/2\nπ/3\nπ/4\nπ/6\nπ/8\nln(10)\nln(2)\nlog10(2)\nlog10(e)\nlog2(10)\nlog2(e)\nThe golden ratio (φ)\nArchimedes’ constant (π)\nsqrt(2)\nsqrt(3)\nThe full circle constant (τ)\nType-state builder for customizing signal connections.\nDerive macro for <code>Export</code> on enums.\nDerive macro for <code>GodotClass</code> on structs.\nDerive macro for <code>GodotConvert</code> on structs.\nConfiguration for a remote procedure call, used with …\nTrait that is implemented for functions that can be …\nType-safe version of a Godot signal.\nDerive macro for <code>Var</code> on enums.\nInvoke the receiver on the given instance (possibly <code>()</code>) …\nRegister <code>method</code> as a remote procedure call on <code>node</code>.\nConnect a non-member function (global function, associated …\nFully customizable connection setup.\nConnect a method (member function) with any <code>Gd&lt;T&gt;</code> (not <code>self</code>…\nConnect a method (member function) with <code>&amp;mut self</code> as the …\nFinalize the builder.\nEmit the signal with the given parameters.\n<strong>Stage 3:</strong> add one or multiple flags to the connection, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<strong>Stage 1:</strong> global/associated function or closure.\nProc-macro attribute to be used with <code>impl</code> blocks of …\nGenerates a <code>Class</code> -&gt; <code>dyn Trait</code> upcasting relation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<strong>Stage 2:</strong> method taking <code>&amp;self</code>.\n<strong>Stage 2:</strong> method taking <code>&amp;mut self</code>.\n<strong>Stage 3:</strong> Name of the <code>Callable</code>, mostly used for debugging.\n<strong>Stage 1:</strong> prepare for a method taking any <code>Gd&lt;T&gt;</code> object.\n<strong>Stage 1:</strong> prepare for a method taking <code>self</code> (the class …\nRegistration support for property types.\n<strong>Stage 3:</strong> allow signal to be called across threads.\nReturns a <code>Dictionary</code> populated with the values required …\nCreates a fallible future for this signal.\nCreates a future for this signal.\nMarker trait to identify <code>GodotType</code>s that can be directly …\nTrait implemented for types that can be used as <code>#[export]</code> …\nTrait implemented for types that can be used as <code>#[var]</code> …\nThe export info to use for an exported field of this type, …\nFunctions used to translate user-provided arguments into …\nSpecific property hints, only override if they deviate …\nEquivalent to <code>@export_enum</code> in Godot.\nEquivalent to <code>@export_file</code> in Godot.\nEquivalent to <code>@export_flags</code> in Godot.\nEquivalent to <code>@export_global_file</code> in Godot.\nMark an exported numerical value to use the editor’s …\nA future that tries to resolve as soon as the provided …\nError that might be returned  by the <code>FallibleSignalFuture</code>.\nThe panicking counter part to the <code>FallibleSignalFuture</code>.\nHandle for an active background task.\nCancels the task if it is still pending and does nothing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSynchronously checks if the task is still pending or has …\nCreate a new async background task.\nOpen a file for reading or writing.\n⚠️ Loads a resource from the filesystem located at <code>path</code>…\n⚠️ Saves a <code>Resource</code>-inheriting object into the file …\nA convenience macro for using the <code>Object::tr()</code> and …\nA convenience macro for using the <code>Object::tr_n()</code> and …\nLoads a resource from the filesystem located at <code>path</code>.\nSaves a <code>Resource</code>-inheriting object into the file located …")