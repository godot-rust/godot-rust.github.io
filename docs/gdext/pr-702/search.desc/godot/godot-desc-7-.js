searchState.loadedDescShard("godot", 7, "The vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nEuler’s number (e)\nThe Euler-Mascheroni constant (γ)\n1/π\n1/sqrt(2)\n1/sqrt(3)\n1/sqrt(π)\n2/π\n2/sqrt(π)\nπ/2\nπ/3\nπ/4\nπ/6\nπ/8\nln(10)\nln(2)\nlog10(2)\nlog10(e)\nlog2(10)\nlog2(e)\nThe golden ratio (φ)\nArchimedes’ constant (π)\nsqrt(2)\nsqrt(3)\nThe full circle constant (τ)\nDerive macro for <code>Export</code> on enums.\nDerive macro for <code>GodotClass</code> on structs.\nDerive macro for <code>GodotConvert</code> on structs.\nDerive macro for <code>Var</code> on enums.\nProc-macro attribute to be used with <code>impl</code> blocks of …\nRegistration support for property types.\nTrait implemented for types that can be used as <code>#[export]</code> …\nInfo needed by Godot, for how to export a type to the …\nMarks types that are registered via “type string hint” …\nTrait implemented for types that can be used as <code>#[var]</code> …\nThe export info to use for an exported field of this type, …\nFunctions used to translate user-provided arguments into …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the representation of this type as a type string.\nCreate a new <code>PropertyHintInfo</code> with a property hint of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")