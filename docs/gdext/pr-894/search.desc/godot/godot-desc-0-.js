searchState.loadedDescShard("godot", 0, "Rust bindings for Godot 4\nExtended documentation\nBuilt-in types like <code>Vector2</code>, <code>GString</code> and <code>Variant</code>.\nMaps the Godot class API to Rust.\nGodot global enums, constants and utility functions.\nEntry point and global init/shutdown of the library.\nMeta-information about variant types, properties and class …\nTypes and traits related to objects.\nOften-imported symbols.\nRegister/export Rust symbols to Godot: classes, methods, …\nHigher-level additions to the Godot engine API.\nGodot enumerator name: <code>TYPE_AABB</code>\nABGR channel order. Reverse of the default RGBA order.\nGodot enumerator name: <code>OP_ADD</code>\nGodot enumerator name: <code>OP_AND</code>\nARGB channel order. More compatible with DirectX.\nGodot enumerator name: <code>TYPE_ARRAY</code>\nAxis-aligned bounding box in 3D space.\nGodot’s <code>Array</code> type.\nUnit vector in +Z direction. Can be interpreted as “out …\nUnit vector in +Z direction. Can be interpreted as “out …\nGodot enumerator name: <code>TYPE_BASIS</code>\nGodot enumerator name: <code>OP_BIT_AND</code>\nGodot enumerator name: <code>OP_BIT_NEGATE</code>\nGodot enumerator name: <code>OP_BIT_OR</code>\nGodot enumerator name: <code>OP_BIT_XOR</code>\nBlack color. This is the default value.\nGodot enumerator name: <code>TYPE_BOOL</code>\nGodot enumerator name: <code>SIDE_BOTTOM</code>\nGodot enumerator name: <code>CORNER_BOTTOM_LEFT</code>\nGodot enumerator name: <code>CORNER_BOTTOM_RIGHT</code>\nA 3x3 matrix, typically used as an orthogonal basis for …\nGodot enumerator name: <code>TYPE_CALLABLE</code>\nGodot enumerator name: <code>TYPE_COLOR</code>\nA <code>Callable</code> represents a function in Godot.\nColor built-in type, in floating-point RGBA format.\nDefines how individual color channels are laid out in …\nHSVA floating-number Color representation.\nThis enum is exhaustive; you should not expect future …\nGodot enumerator name: <code>TYPE_DICTIONARY</code>\nGodot enumerator name: <code>OP_DIVIDE</code>\nDown unit vector. Y is down in 2D, so this vector points …\nDown unit vector. Y is down in 2D, so this vector points …\nUnit vector in -Y direction. Typically interpreted as down …\nUnit vector in -Y direction. Typically interpreted as down …\nGodot’s <code>Dictionary</code> type.\nGodot enumerator name: <code>OP_EQUAL</code>\nThis enum is exhaustive; you should not expect future …\nThe basis that will flip something along the X axis when …\nThe <code>Transform2D</code> that will flip something along its X axis.\n<code>Transform3D</code> with mirroring applied perpendicular to the YZ …\nThe basis that will flip something along the Y axis when …\nThe <code>Transform2D</code> that will flip something along its Y axis.\n<code>Transform3D</code> with mirroring applied perpendicular to the XZ …\nThe basis that will flip something along the Z axis when …\n<code>Transform3D</code> with mirroring applied perpendicular to the XY …\nGodot enumerator name: <code>TYPE_FLOAT</code>\nUnit vector in -Z direction. Can be interpreted as “into …\nUnit vector in -Z direction. Can be interpreted as “into …\nGodot enumerator name: <code>OP_GREATER</code>\nGodot enumerator name: <code>OP_GREATER_EQUAL</code>\nGodot’s reference counted string type.\nThe identity basis, with no rotation or scaling applied.\nA Projection with no transformation defined. When applied …\nThe identity transform, with no translation, rotation or …\nThe identity transform, with no translation, rotation or …\nGodot enumerator name: <code>OP_IN</code>\nInfinity vector, a vector with all components set to …\nInfinity vector, a vector with all components set to …\nInfinity vector, a vector with all components set to …\nGodot enumerator name: <code>TYPE_INT</code>\nAn invalid RID will never refer to a resource. Internally …\nGodot enumerator name: <code>SIDE_LEFT</code>\nLeft unit vector. Represents the direction of left.\nLeft unit vector. Represents the direction of left.\nUnit vector in -X direction. Can be interpreted as left in …\nUnit vector in -X direction. Can be interpreted as left in …\nGodot enumerator name: <code>OP_LESS</code>\nGodot enumerator name: <code>OP_LESS_EQUAL</code>\nGodot enumerator name: <code>TYPE_MAX</code>\nMax vector, a vector with all components equal to <code>i32::MAX</code>…\nMax vector, a vector with all components equal to <code>i32::MAX</code>…\nMax vector, a vector with all components equal to <code>i32::MAX</code>…\nGodot enumerator name: <code>OP_MAX</code>\nMin vector, a vector with all components equal to <code>i32::MIN</code>…\nMin vector, a vector with all components equal to <code>i32::MIN</code>…\nMin vector, a vector with all components equal to <code>i32::MIN</code>…\nUnit vector pointing towards the bottom side (down) of …\nUnit vector pointing towards the front side (facing …\nUnit vector pointing towards the left side of imported 3D …\nUnit vector pointing towards the rear side (back) of …\nUnit vector pointing towards the right side of imported 3D …\nUnit vector pointing towards the top side (up) of imported …\nGodot enumerator name: <code>OP_MODULE</code>\nGodot enumerator name: <code>OP_MULTIPLY</code>\nGodot enumerator name: <code>OP_NEGATE</code>\nGodot enumerator name: <code>TYPE_NIL</code>\nGodot enumerator name: <code>TYPE_NODE_PATH</code>\nGodot enumerator name: <code>OP_NOT</code>\nGodot enumerator name: <code>OP_NOT_EQUAL</code>\nA pre-parsed scene tree path.\nGodot enumerator name: <code>TYPE_OBJECT</code>\nOne vector, a vector with all components set to <code>1</code>.\nOne vector, a vector with all components set to <code>1</code>.\nOne vector, a vector with all components set to <code>1</code>.\nOne vector, a vector with all components set to <code>1</code>.\nOne vector, a vector with all components set to <code>1</code>.\nOne vector, a vector with all components set to <code>1</code>.\nGodot enumerator name: <code>OP_OR</code>\nGodot enumerator name: <code>TYPE_PACKED_BYTE_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_COLOR_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_FLOAT32_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_FLOAT64_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_INT32_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_INT64_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_STRING_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_VECTOR2_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_VECTOR3_ARRAY</code>\nGodot enumerator name: <code>TYPE_PACKED_VECTOR4_ARRAY</code>\nGodot enumerator name: <code>TYPE_PLANE</code>\nGodot enumerator name: <code>OP_POSITIVE</code>\nGodot enumerator name: <code>OP_POWER</code>\nGodot enumerator name: <code>TYPE_PROJECTION</code>\nImplements Godot’s <code>PackedByteArray</code> type, which is a …\nImplements Godot’s <code>PackedColorArray</code> type, which is a …\nImplements Godot’s <code>PackedFloat32Array</code> type, which is a …\nImplements Godot’s <code>PackedFloat64Array</code> type, which is a …\nImplements Godot’s <code>PackedInt32Array</code> type, which is a …\nImplements Godot’s <code>PackedInt64Array</code> type, which is a …\nImplements Godot’s <code>PackedStringArray</code> type, which is a …\nImplements Godot’s <code>PackedVector2Array</code> type, which is a …\nImplements Godot’s <code>PackedVector3Array</code> type, which is a …\nImplements Godot’s <code>PackedVector4Array</code> type, which is a …\n3D plane in Hessian normal form.\nA 4x4 matrix used for 3D projective transformations.\nThe eye to create a projection for, when creating a …\nA projection’s clipping plane.\nGodot enumerator name: <code>TYPE_QUATERNION</code>\nUnit quaternion to represent 3D rotations.\nGodot enumerator name: <code>TYPE_RECT2</code>\nGodot enumerator name: <code>TYPE_RECT2I</code>\nRGBA channel order. Godot’s default.\nGodot enumerator name: <code>TYPE_RID</code>\nGodot enumerator name: <code>SIDE_RIGHT</code>\nRight unit vector. Represents the direction of right.\nRight unit vector. Represents the direction of right.\nUnit vector in +X direction. Can be interpreted as right …\nUnit vector in +X direction. Can be interpreted as right …\nConvenience conversion between <code>real</code> and <code>f32</code>/<code>f64</code>.\n2D axis-aligned bounding box.\n2D axis-aligned integer bounding box.\nA RID (“resource ID”) is an opaque handle that refers …\nRepresents a custom callable object defined in Rust.\nGodot enumerator name: <code>OP_SHIFT_LEFT</code>\nGodot enumerator name: <code>OP_SHIFT_RIGHT</code>\nGodot enumerator name: <code>TYPE_SIGNAL</code>\nGodot enumerator name: <code>TYPE_STRING</code>\nGodot enumerator name: <code>TYPE_STRING_NAME</code>\nGodot enumerator name: <code>OP_SUBTRACT</code>\nThis enum is exhaustive; you should not expect future …\nA <code>Signal</code> represents a signal of an Object instance in …\nA string optimized for unique names.\nGodot enumerator name: <code>SIDE_TOP</code>\nGodot enumerator name: <code>CORNER_TOP_LEFT</code>\nGodot enumerator name: <code>CORNER_TOP_RIGHT</code>\nGodot enumerator name: <code>TYPE_TRANSFORM2D</code>\nGodot enumerator name: <code>TYPE_TRANSFORM3D</code>\nTransparent black.\nTransparent white.\nAffine 2D transform (2x3 matrix).\nAffine 3D transform (3x4 matrix).\nUp unit vector. Y is down in 2D, so this vector points -Y.\nUp unit vector. Y is down in 2D, so this vector points -Y.\nUnit vector in +Y direction. Typically interpreted as up …\nUnit vector in +Y direction. Typically interpreted as up …\nGodot enumerator name: <code>TYPE_VECTOR2</code>\nGodot enumerator name: <code>TYPE_VECTOR2I</code>\nGodot enumerator name: <code>TYPE_VECTOR3</code>\nGodot enumerator name: <code>TYPE_VECTOR3I</code>\nGodot enumerator name: <code>TYPE_VECTOR4</code>\nGodot enumerator name: <code>TYPE_VECTOR4I</code>\nA valid RID may refer to some resource, but is not …\nGodot variant type, able to store a variety of different …\nA Godot <code>Array</code> without an assigned type.\nGodot enum name: <code>Variant.Operator</code>.\nGodot enum name: <code>Variant.Type</code>.\nVector used for 2D math using floating point coordinates.\nEnumerates the axes in a <code>Vector2</code>.\nVector used for 2D math using integer coordinates.\nVector used for 3D math using floating point coordinates.\nEnumerates the axes in a <code>Vector3</code>.\nVector used for 3D math using integer coordinates.\nVector used for 4D math using floating point coordinates.\nEnumerates the axes in a <code>Vector4</code>.\nVector used for 4D math using integer coordinates.\nThe W axis.\nThe X axis.\nThe X axis.\nThe X axis.\nGodot enumerator name: <code>OP_XOR</code>\nGodot enumerator name: <code>EULER_ORDER_XYZ</code>\nGodot enumerator name: <code>EULER_ORDER_XZY</code>\nThe Y axis.\nThe Y axis.\nThe Y axis.\nGodot enumerator name: <code>EULER_ORDER_YXZ</code>\nGodot enumerator name: <code>EULER_ORDER_YZX</code>\nThe Z axis.\nThe Z axis.\nA Projection with all values initialized to 0. When …\nZero vector, a vector with all components set to <code>0</code>.\nZero vector, a vector with all components set to <code>0</code>.\nZero vector, a vector with all components set to <code>0</code>.\nZero vector, a vector with all components set to <code>0</code>.\nZero vector, a vector with all components set to <code>0</code>.\nZero vector, a vector with all components set to <code>0</code>.\nGodot enumerator name: <code>EULER_ORDER_ZXY</code>\nGodot enumerator name: <code>EULER_ORDER_ZYX</code>\nThe color’s alpha component. A value of 0 means that the …\nThe first basis vector.\nReturns the alpha channel value as a byte. If <code>self.a</code> is …\nReturns an AABB with the same geometry, with most-negative …\nReturns a rectangle with the same geometry, with top-left …\nReturns a <code>Rect2i</code> with equivalent position and area, …\nReturns a new vector with all components in absolute …\nReturns a new vector with all components in absolute …\nReturns a new vector with all components in absolute …\nReturns a new vector with all components in absolute …\nReturns a new vector with all components in absolute …\nReturns a new vector with all components in absolute …\nReturns the inverse of the transform, under the assumption …\nReturns the inverse of the transform, under the assumption …\nReturns this vector’s angle with respect to the positive …\nReturns the <strong>signed</strong> angle between <code>self</code> and the given …\nReturns the <strong>unsigned</strong> angle between <code>self</code> and the given …\nReturns the angle to the given vector, in radians.\nReturns <code>true</code> if the two <code>Aabb</code>s are approximately equal, by …\nReturns if this basis and <code>other</code> are approximately equal, …\nHue values are wrapped before approximate comparison.\nFinds whether the two planes are approximately equal.\nReturns if the two <code>Rect2</code>s are approximately equal, by …\nReturns if the two transforms are approximately equal, by …\nReturns if the two transforms are approximately equal, by …\nReturns <code>true</code> if this vector and <code>to</code> are approximately equal.\nReturns <code>true</code> if this vector and <code>to</code> are approximately equal.\nReturns <code>true</code> if this vector and <code>to</code> are approximately equal.\nReturns the area of the rectangle.\nReturns the area of the <code>Rect2i</code>.\nConstructs <code>Array</code> literals, similar to Rust’s standard …\nCast this <code>real</code> to an <code>f32</code> using <code>as</code>.\nCast this <code>real</code> to an <code>f64</code> using <code>as</code>.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns an exclusive Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns a shared Rust slice of the array.\nReturns the X:Y aspect ratio of this Projection’s …\nReturns the aspect ratio of this vector, the ratio of …\nReturns the aspect ratio of this vector, the ratio of …\nAssert that the size of the <code>Aabb</code> is not negative.\nAssert that the size of the <code>Rect2</code> is not negative.\nAssert that the size of the <code>Rect2i</code> is not negative.\n⚠️ Returns the value at the specified index.\n⚠️ Returns the value for the given key, or panics.\nThe color’s blue component.\nThe second basis vector.\nReturns the blue channel value as a byte. If <code>self.b</code> is …\nReturns the last element in the array, or <code>None</code> if the …\nThe basis is a matrix containing 3 vectors as its columns. …\nReturns a vector transformed (multiplied) by the basis …\nReturns a vector transformed (multiplied) by the inverse …\nReturns the derivative at the given <code>t</code> on the Bézier curve …\nReturns the derivative at the given <code>t</code> on the Bézier curve …\nReturns the point at the given <code>t</code> on the Bézier curve …\nReturns the point at the given <code>t</code> on the Bézier curve …\nReturns a copy of this Callable with one or more arguments …\nBlends the given color on top of this color, taking its …\nInterpret the <code>Variant</code> as <code>bool</code>.\nReturns a new vector “bounced off” from a plane …\nReturns a new vector “bounced off” from a plane …\nFinds the index of an existing value in a sorted array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a <em>sorted</em> array …\nFinds the index of an existing value in a sorted array …\n⚠️ Calls the specified <code>method</code> with the given <code>args</code>.\nCalls the method represented by this callable.\nCreate a new <code>Rect2</code> from a <code>Rect2i</code>, using <code>as</code> for <code>i32</code> to <code>real</code> …\nConverts to a vector with floating-point <code>real</code> components, …\nConverts to a vector with floating-point <code>real</code> components, …\nConverts to a vector with floating-point <code>real</code> components, …\nCreate a new <code>Rect2i</code> from a <code>Rect2</code>, using <code>as</code> for <code>real</code> to <code>i32</code> …\nConverts to a vector with integer components, using <code>as</code> …\nConverts to a vector with integer components, using <code>as</code> …\nConverts to a vector with integer components, using <code>as</code> …\nReturns a new vector with all components rounded up …\nReturns a new vector with all components rounded up …\nReturns a new vector with all components rounded up …\nReturns the center of the AABB, which is equal to …\nFinds the center point of the plane.\nReturns the center of the Rect2, which is equal to …\nReturns the center of the <code>Rect2i</code>, which is equal to …\nGets the internal chars slice from a <code>GString</code>.\nReturns a new color with all components clamped between …\nReturns a new vector with all components clamped between …\nReturns a new vector with all components clamped between …\nReturns a new vector with all components clamped between …\nReturns a new vector with all components clamped between …\nReturns a new vector with all components clamped between …\nReturns a new vector with all components clamped between …\nClears the array, removing all elements.\nRemoves all key-value pairs from the dictionary.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nClears the array, removing all elements.\nReturns the first column of the matrix,\nReturns the second column of the matrix,\nReturns the third column of the matrix,\nThe columns of the projection matrix.\nConnects this signal to the specified callable.\nReturns an <code>Array</code> of connections for this signal.\nReturns <code>true</code> if the array contains the given value. …\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the array contains the given value.\nReturns <code>true</code> if the dictionary contains all the given keys.\nReturns <code>true</code> if the dictionary contains the given key.\nFinds whether a point is inside the plane or not.\nReturns <code>true</code> if the <code>Rect2i</code> contains a point. By …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the maximum of the two …\nReturns a new vector containing the minimum of the two …\nReturns a new vector containing the minimum of the two …\nReturns a new vector containing the minimum of the two …\nReturns a new vector containing the minimum of the two …\nReturns a new vector containing the minimum of the two …\nReturns a new vector containing the minimum of the two …\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nReturns the number of times a value is in the array.\nCreates a new Projection that projects positions from a …\nCreates a new Projection that scales a given projection to …\nCreates a new Projection for projecting positions onto a …\nReturns the vertical field of view of a projection (in …\nCreates a new Projection that projects positions in a …\nCreates a new Projection that projects positions in a …\nCreates a new Projection that projects positions into the …\nCreates a new Projection that projects positions using an …\nCreates a new Projection that projects positions using an …\nCreates a new Projection that projects positions using a …\nCreates a new Projection that projects positions using a …\nReturns the 2D analog of the cross product for this vector …\nReturns the cross product of this vector and <code>with</code>.\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nCubic interpolation between <code>self</code> and <code>b</code> using <code>pre_a</code> and …\nDistance between the plane and the origin point.\nCreates a new color resulting by making this color darker …\nReturns the determinant of the matrix.\nReturn the determinant of the matrix.\nReturns the determinant of the basis matrix.\nConstructs <code>Dictionary</code> literals, close to Godot’s own …\n⚠️ Returns the normalized vector pointing from this …\n⚠️ Returns the normalized vector pointing from this …\n⚠️ Returns the normalized vector pointing from this …\nDisconnects this signal from the specified <code>Callable</code>.\nReturns the squared distance between this vector and <code>to</code>.\nReturns the squared distance between this vector and <code>to</code>.\nReturns the squared distance between this vector and <code>to</code>.\nFinds the shortest distance between the plane and a point.\nReturns the distance between this vector and <code>to</code>.\nReturns the distance between this vector and <code>to</code>.\nReturns the distance between this vector and <code>to</code>.\nReturns the dot product of this vector and <code>with</code>.\nReturns the dot product of this vector and <code>with</code>.\nReturns the dot product of this vector and <code>with</code>.\nReturns a deep copy of the array. All nested arrays and …\nDeep copy, duplicating nested collections.\nReturns a shallow copy of the array. All array elements …\nShallow copy, copying elements but sharing nested …\nEmits this signal.\nWhether <code>self</code> covers at least the entire area of <code>b</code> (and …\nWhether <code>self</code> covers at least the entire area of <code>b</code> (and …\nReturns <code>true</code> if this <code>Rect2i</code> completely encloses another …\nThe end of the <code>Aabb</code> calculated as <code>position + size</code>.\nThe end of the <code>Rect2</code> calculated as <code>position + size</code>.\nThe end of the <code>Rect2i</code> calculated as <code>position + size</code>.\nRemoves the first occurrence of a value from the array.\nEvaluates an expression using a GDScript operator.\nReturns a copy of this AABB expanded to include a given …\nReturns a copy of this rectangle expanded to include a …\nReturns a copy of this <code>Rect2i</code> expanded so that the borders …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nAppends another array at the end of this array. Equivalent …\nCopies all keys and values from <code>other</code> into <code>self</code>.\nReturns the dimensions of the far clipping plane of the …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nAssigns the given value to all elements in the array. This …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nSearches the array for the first occurrence of a value and …\nReverse-search a key by its value.\nReturns a copy of this projection, with the signs of the …\nReturns a new vector with all components rounded down …\nReturns a new vector with all components rounded down …\nReturns a new vector with all components rounded down …\nFormats <code>Array</code> to match Godot’s string representation.\nFormats <code>Dictionary</code> to match Godot’s string …\nFormats <code>Aabb</code> to match godot’s display style.\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>PackedArray</code> to match Godot’s string …\nFormats <code>Color</code> to match Godot’s string representation.\nFormats <code>Plane</code> to match Godot’s string representation.\nFormats <code>Projection</code> to match Godot’s string …\nFormats <code>Rect2</code> to match Godot’s string representation.\nFormats <code>Rect2i</code> to match Godot’s string representation.\nFormats <code>Rid</code> to match Godot’s string representation.\nFormats the value with the given formatter.  Read more\nFormats the value with the given formatter.  Read more\nReturns the horizontal field of view of the projection (in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts this <code>StringName</code> to a <code>GString</code>.\nReturns the argument unchanged.\nConverts this <code>NodePath</code> to a <code>GString</code>.\nReturns the argument unchanged.\nConverts this <code>StringName</code> to a <code>NodePath</code>.\nConverts this <code>GString</code> to a <code>NodePath</code>.\nConverts this <code>GString</code> to a <code>StringName</code>.\nConverts this <code>NodePath</code> to a <code>StringName</code>.\nCreates a <code>StringName</code> from a static ASCII/Latin-1 <code>c&quot;string&quot;</code>.\nReturns the argument unchanged.\nCreate a variant holding a non-nil value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new transform with origin <code>(0,0,0)</code> from this basis.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Transform2D</code> which will rotate by the given …\nCreates a unit Vector2 rotated to the given <code>angle</code> in …\nCreate a new <code>Transform2D</code> which will rotate by <code>angle</code> and …\nCreate a new <code>Transform2D</code> which will rotate by <code>angle</code>, scale …\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreates a vector from the given array.\nCreate a <code>Basis</code> from an axis and angle.\nCreates a quaternion from a Vector3 and an angle.\nCreate a new basis from 3 column vectors.\nCreate a matrix from four column vectors.\nCreate a new <code>Transform2D</code> with the given column vectors.\nCreate a new transform from 4 matrix-columns.\nCreates a new <code>Plane</code> from normal and origin distance.\nCreate a new <code>Rect2</code> from four reals representing position …\nCreate a new <code>Rect2i</code> from four <code>i32</code>s representing position …\nCreate a new <code>Aabb</code> with the first corner at <code>position</code> and …\nCreate a new <code>Rect2</code> with the first corner at <code>position</code> and …\nCreate a new <code>Rect2i</code> with the first corner at <code>position</code> and …\nCreate a highly configurable callable from Rust.\nCreate a diagonal matrix from the given values.\nCreate a diagonal matrix from the given values.\nCreate a <code>Basis</code> from three angles <code>a</code>, <code>b</code>, and <code>c</code> interpreted …\nCast an <code>f32</code> to a <code>real</code> using <code>as</code>.\nCast an <code>f64</code> to a <code>real</code> using <code>as</code>.\nCreate a callable from a Rust function or closure.\nConstructs a <code>Color</code> from an HSV profile using Godot’s …\nConstruct from Hue, Saturation and Value.\nConstruct from Hue, Saturation, Value and Alpha.\nConstructs a <code>Color</code> from an HTML color code string. Valid …\nCreate a new <code>Plane</code> through the origin from a normal.\nCreate a callable for the method <code>object::method_name</code>.\nCreate a signal for the signal <code>object::signal_name</code>.\nConstructs a <code>Color</code> from an OK HSL profile. The hue (<code>h</code>), …\nCreate a new <code>Plane</code> from a normal and a point in the plane.\nCreates a new <code>Plane</code> from three points, given in clockwise …\nConstructs a <code>Transform3D</code> from a <code>Projection</code> by trimming the …\nCreate a <code>Basis</code> from a <code>Quaternion</code>.\nConstructs a new <code>Color</code> with the given color components, …\nConstructs a new <code>Color</code> with the given components.\nConstructs a new <code>Color</code> with the given components as <code>u16</code> …\nConstructs a new <code>Color</code> with the given components as bytes. …\nConstructs a <code>Color</code> from an RGBE9995 format integer. This …\nCreate a new basis from 3 row vectors. These are <em>not</em> basis …\nCreate a diagonal matrix from the given values.\nConstructs a <code>Color</code> from a string, which can be either:\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nCreates a vector from the given tuple.\nConstructs a new <code>Color</code> from a 32-bits value with the given …\nConstructs a new <code>Color</code> from a 64-bits value with the given …\nReturns the first element in the array, or <code>None</code> if the …\nThe color’s green component.\nReturns the green channel value as a byte. If <code>self.g</code> is …\nReturns the value at the specified index, or <code>None</code> if the …\nReturns the value for the given key, or <code>None</code>.\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns a copy of the value at the specified index, or <code>None</code>…\nReturns the value at the key in the dictionary, or <code>NIL</code> …\nReturns the number of pixels with the given pixel width …\nReturns the clipping plane of this Projection whose index …\nReturns the type that is currently held by this variant.\nReturns a copy of the AABB grown by the specified <code>amount</code> …\nReturns a copy of the Rect2 grown by the specified <code>amount</code> …\nReturns a copy of the <code>Rect2i</code> grown by the specified <code>amount</code> …\nReturns a copy of the Rect2 grown by the specified amount …\nReturns a copy of the <code>Rect2i</code> grown by the specified amount …\nReturns a copy of the <code>Rect2</code> grown by the specified <code>amount</code> …\nReturns a copy of the <code>Rect2i</code> grown by the specified <code>amount</code> …\nReturns <code>true</code> if the AABB has area, and <code>false</code> if the AABB …\nReturns <code>true</code> if the Rect2 has area, and <code>false</code> if the Rect2 …\nReturns <code>true</code> if the <code>Rect2i</code> has area, and <code>false</code> if the …\nReturns <code>true</code> if the AABB contains a point. By convention, …\nReturns <code>true</code> if the Rect2 contains a point. By convention, …\nReturns true if the AABB has a volume, and false if the …\nReturns the 32-bit hash value of this callable’s object.\nReturns a 32-bit integer hash value representing the array …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturns a 32-bit integer hash value representing the …\nReturn Godot’s hash value for the variant.\n⚠️ Inserts a new element before the index. The index …\nInsert a value at the given key, returning the previous …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nInserts a new element at a given index in the array. The …\nReturns a transform interpolated between this transform …\nReturns a transform interpolated between this transform …\nFinds the intersection point of three planes.\nFinds the intersection point of the plane with a ray.\nFinds the intersection point of the plane with a line …\nReturns the intersection between two AABBs.\nReturns the intersection of this Rect2 and <code>b</code>. If the …\nReturns the intersection of this <code>Rect2i</code> and <code>b</code>.\nChecks whether two AABBs have at least one point in common.\nChecks whether two rectangles have at least one point in …\nReturns <code>true</code> if the <code>Rect2i</code> overlaps with <code>b</code> (i.e. they have …\nChecks whether two AABBs have at least one <em>inner</em> point in …\nChecks whether two rectangles have at least one <em>inner</em> …\nReturns <code>true</code> if the AABB is on both sides of a plane.\nReturns <code>true</code> if the given ray intersects with this AABB. …\nReturns <code>true</code> if the given ray intersects with this AABB. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an invalid/empty object that cannot be called.\nCreates an invalid/empty signal that cannot be called.\nCreates a new <code>Plane</code> with default values. This new <code>Plane</code> …\nReturns the inverse of the matrix.\nReturns a Projection that performs the inverse of this …\nReturns the color with its <code>r</code>, <code>g</code>, and <code>b</code> components inverted:\nInvokes the callable with the given arguments as <code>Variant</code> …\nReturns <code>true</code> if the specified <code>Callable</code> is connected to …\nReturns true if this callable is a custom callable.\nReturns <code>true</code> if the array is empty.\nReturns true if the dictionary is empty.\nReturns <code>true</code> if this is the empty string.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if the array is empty.\nReturns <code>true</code> if this AABB is finite, by calling …\nReturns <code>true</code> if this basis is finite. Meaning each element …\nReturns <code>true</code> if the plane is finite by calling <code>is_finite</code> …\nReturns <code>true</code> if this Rect2 is finite, by calling …\nReturns <code>true</code> if this transform is finite, by calling …\nReturns true if this transform is finite by calling …\nReturns true if each component of this vector is finite.\nReturns true if each component of this vector is finite.\nReturns true if each component of this vector is finite.\nReturns <code>true</code> if this is an invalid RID.\nReturns <code>true</code> if either of the coordinates of this <code>Rect2i</code>s …\nChecks whether the variant is empty (<code>null</code> value in …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns <code>true</code> if the vector is normalized, i.e. its length …\nReturns true if this callable has no target to call the …\nReturns <code>true</code> if the signal’s name does not exist in its …\nReturns <code>true</code> if this Projection performs an orthogonal …\nReturns <code>true</code> if <code>point</code> is located above the plane.\nReturns true if the callable’s object exists and has a …\nReturns <code>true</code> if this is a valid RID.\nReturns <code>true</code> if this vector’s values are approximately …\nReturns <code>true</code> if this vector’s values are approximately …\nReturns <code>true</code> if this vector’s values are approximately …\nIterator types for arrays and dictionaries.\nReturns an iterator over the elements of the <code>Array</code>. Note …\nReturns an iterator over the key-value pairs of the …\nReturns a Projection with the X and Y values from the …\nCreates a new <code>Array</code> containing all the keys currently in …\nReturns an iterator over the keys in a <code>Dictionary</code>.\nReturns the number of elements in the array. Equivalent of …\nReturns the number of entries in the dictionary.\nReturns the number of characters in the string.\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the number of elements in the array. Equivalent of …\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nReturns the length (magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nSquared length (squared magnitude) of this vector.\nReturns the linear interpolation between <code>self</code>’s …\nReturns the result of the linear interpolation between …\nReturns the result of the linear interpolation between …\nReturns the result of the linear interpolation between …\nCreates a new color resulting by making this color lighter …\nReturns the vector with a maximum length by limiting its …\nReturns the vector with a maximum length by limiting its …\nReturns the color converted to the sRGB color space. This …\nReturns the factor by which the visible level of detail is …\nReturns the normalized longest axis of the AABB.\nReturns the index of the longest axis of the AABB …\nReturns the scalar length of the longest axis of the AABB.\nReturns the light intensity of the color, as a value …\nMath-related functions and traits like <code>ApproxEq</code>.\nReturns the maximum value contained in the array if all …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns the axis of the vector’s highest value. See …\nReturns a larger AABB that contains this AABB and <code>b</code>.\nReturns a larger rectangle that contains this <code>Rect2</code> and <code>b</code>.\nReturns a larger <code>Rect2i</code> that contains this <code>Rect2i</code> and <code>b</code>.\nReturns the name of the method represented by this …\nReturns the minimum value contained in the array if all …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns the axis of the vector’s lowest value. See …\nReturns a new vector moved toward <code>to</code> by the fixed <code>delta</code> …\nReturns a new vector moved toward <code>to</code> by the fixed <code>delta</code> …\nTransforms each coordinate in <code>rhs.position</code> and <code>rhs.end()</code> …\nTransforms each coordinate in <code>rhs.position</code> and <code>rhs.end()</code> …\nReturns the name of the signal.\nReturns the negative value of the plane by flipping both …\nConstructs an empty <code>Array</code>.\nConstructs an empty <code>Dictionary</code>.\nConstruct a new empty GString.\nCreate a new <code>Aabb</code> from a position and a size.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nConstructs an empty array.\nCreates a new <code>Plane</code> from the <code>normal</code> and the distance from …\nCreate a new projection from a list of column vectors.\nCreate a new <code>Rect2</code> from a position and a size.\nCreate a new <code>Rect2i</code> from a position and a size.\nCreate a new RID.\nCreate a new transform from a <code>Basis</code> and a <code>Vector3</code>.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nCreates a vector with the given components.\nIf <code>use_model_front</code> is true, the +Z axis (asset front) is …\nCreate an empty variant (<code>null</code> value in GDScript).\nNormal vector pointing away from the plane.\nClamps all components to a usually valid range <code>0.0..=1.0</code>.\nReturns a copy of the plane with its <code>normal</code> and <code>d</code> scaled …\nPanics\n⚠️ Returns the vector scaled to unit length.\n⚠️ Returns the vector scaled to unit length.\n⚠️ Returns the vector scaled to unit length.\nTransforms the <code>ColorHsv</code> into one with values clamped to …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nReturns the vector scaled to unit length or <code>Self::ZERO</code>, if …\nTransforms the <code>ColorHsv</code> into one with <strong>Hue</strong> value wrapped …\nReturns the object on which this callable is called.\nReturns the object to which this signal belongs.\nReturns the ID of this callable’s object, see also …\nReturns the ID of this signal’s object, see also …\nReturns the Vector3 from an octahedral-compressed form …\nReturns the octahedral-encoded (oct32) form of this <code>Vector3</code>…\nThe origin of the transform. The coordinate space defined …\nThe new origin of the transformed coordinate system.\nReturns a perpendicular vector rotated 90 degrees …\n⚠️ Returns the orthonormalized version of the matrix …\nReturns the transform with the basis orthogonal (90 …\nReturns the transform with the basis orthogonal (90 …\nReturns the outer product with <code>with</code>.\nReturns a Projection with the near clipping distance …\nReturns a random element from the array, or <code>None</code> if it is …\nRemoves and returns the last element of the array. Returns …\nRemoves and returns the first element of the array, in …\nThe position of the rectangle.\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nReturns a vector composed of the <code>FloatExt::fposmod()</code> of …\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nElement-wise product of all vectors in the iterator.\nReturns the orthogonal projection of <code>point</code> to the plane.\nReturns the result of projecting the vector onto the given …\nReturns the result of projecting the vector onto the given …\nAppends an element to the end of the array.\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAppends an element to the end of the array. Equivalent of …\nAdds an element at the beginning of the array, in O(n).\nThe color’s red component.\nReturns the red channel value as a byte. If <code>self.r</code> is …\nFloating point type used for many structs and functions in …\nA macro to coerce float-literals into the <code>real</code> type.\nArray of reals.\nReturns the reciprocal (inverse) of the vector. This is …\nReturns the reciprocal (inverse) of the vector. This is …\nReturns the result of reflecting the vector defined by the …\nReturns the result of reflecting the vector defined by the …\n⚠️ Removes and returns the element at the specified …\nRemoves a key from the map, and returns the value …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nRemoves and returns the element at the specified index. …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nResizes the array to contain a different number of …\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nReverses the order of the elements in the array.\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nSearches the array backwards for the last occurrence of a …\nIntroduce an additional rotation around the given <code>axis</code> by …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns the result of rotating this vector by <code>angle</code> (in …\nReturns this vector rotated around <code>axis</code> by <code>angle</code> radians. …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns a copy of the transform rotated by the given <code>angle</code> …\nReturns the transform’s rotation (in radians).\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nReturns a new vector with all components rounded to the …\nThe rows of the matrix. These are <em>not</em> the basis vectors.\nReturns the scale of the matrix.\nReturns the transform’s scale.\nIntroduce an additional scaling specified by the given 3D …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nReturns a copy of the transform scaled by the given scale …\nSets the value at the specified index.\nSet a key to a given value.\nSets the alpha channel value as a byte, mapped to the …\nSets the blue channel value as a byte, mapped to the range …\nSet the values of the first column of the matrix.\nSet the values of the second column of the matrix.\nSet the values of the third column of the matrix.\nSet size based on desired end-point.\nSet size based on desired end-point.\nSet size based on desired end-point.\nSets the green channel value as a byte, mapped to the …\nSets the red channel value as a byte, mapped to the range …\nReturns the normalized shortest axis of the AABB.\nReturns the index of the shortest axis of the AABB …\nReturns the scalar length of the shortest axis of the AABB.\nShrinks the array down to <code>new_size</code>.\nShuffles the array such that the items will have a random …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns a new vector with each component set to 1 if the …\nReturns the signed angle to the given vector, as radians …\nThe size of the rectangle.\nReturns the transform’s skew (in radians).\nAssuming that the matrix is a proper rotation matrix, …\nPanics\nReturns the result of spherical linear interpolation …\nReturns the spherical linear interpolation between the …\nPanics\nReturns a new vector slid along a plane defined by the …\nReturns a new vector slid along a plane defined by the …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nA new vector with each component snapped to the closest …\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the elements of the array in ascending order.\nSorts the array.\nSorts the array.\nPanics\nPanics\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nCreates a vector with all components set to <code>v</code>.\nReturns the color converted to the linear color space. …\nReturn Godot’s string representation of the variant.\nSpecialized types related to Godot’s various string …\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new packed array.\nReturns a sub-range <code>begin..end</code>, as a new <code>Array</code>.\nReturns a sub-range <code>begin..end</code>, as a new array.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nElement-wise sum of all vectors in the iterator.\nReturns the support point in a given direction. This is …\nAccess vector components in different order.\nTransposed dot product with the X axis (column) of the …\nTransposed dot product with the Y axis (column) of the …\nTransposed dot product with the Z axis (column) of the …\n⚠️ Convert to type <code>T</code>, panicking on failure.\nReduces dimension to 2D, discarding the Z component.\nReduces dimension to 2D, discarding the Z component.\nIncreases dimension to 3D, accepting a new value for the Z …\nIncreases dimension to 3D, accepting a new value for the Z …\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns an array with the components of the vector.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nReturns a <code>PackedByteArray</code> with each value encoded as bytes.\nCreates a <code>[Vector3; 3]</code> with the columns of the <code>Basis</code>.\nReturns the rotation of the matrix in euler angles.\nReturns a copy of the data converted to a …\nReturns a copy of the data converted to a …\n⚠️ Convert <code>Color</code> into <code>ColorHsv</code>.\nReturns the HTML color code representation of this color, …\nReturns the HTML color code representation of this color, …\nReturns a copy of the data converted to a <code>PackedInt32Array</code>…\nReturns a copy of the data converted to a <code>PackedInt64Array</code>…\nCreates a <code>Quaternion</code> representing the same rotation as …\n⚠️ Convert <code>ColorHsv</code> into <code>Color</code>.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns a tuple with the components of the vector.\nReturns the color converted to a 32-bit integer (each …\nReturns the color converted to a 64-bit integer (each …\nConvert this RID into a <code>u64</code>. Returns 0 if it is invalid.\nConvert this RID into a <code>u64</code> if it is valid. Otherwise, …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nConverts this array to a Rust vector, making a copy of its …\nO(1), non-lexicographic, non-stable ordering relation.\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns a copy of the transform translated by the given …\nReturns the transposed version of the matrix.\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nReturns the normalized vector pointing from this vector to …\nConvert from one of GDScript’s <code>Projection.PLANE_*</code> …\nConvert from numbers <code>1</code> and <code>2</code>.\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nReturns the vector scaled to unit length or <code>None</code>, if …\nConvert to type <code>T</code>, returning <code>Err</code> on failure.\nFallible <code>Color</code> conversion into <code>ColorHsv</code>. See also …\nFallible <code>ColorHsv</code> conversion into <code>Color</code>. See also: …\nCreates a new <code>Array</code> containing all the values currently in …\nConstructs <code>VariantArray</code> literals, similar to Rust’s …\nReturns the dimensions of the viewport plane that this …\nReturns the volume of the AABB.\nThe vector’s W component.\nThe vector’s W component.\nReturns a copy of this color with the given alpha value. …\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s X component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Y component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nThe vector’s Z component.\nReturns the distance for this Projection beyond which …\nReturns the distance for this Projection before which …\nAn iterator over typed elements of an <code>Array</code>.\nIterator over key-value pairs in a <code>Dictionary</code>.\nIterator over keys in a <code>Dictionary</code>.\n<code>Dictionary</code> iterator that converts each key-value pair into …\n<code>Dictionary</code> iterator that converts each key into a typed <code>K</code>.\nReturns an array of the keys.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an iterator that converts each <code>(Variant, Variant)</code> …\nCreates an iterator that will convert each <code>Variant</code> key …\nApproximate equality-comparison of geometric types.\nAsserts that two values are approximately equal\nAsserts that two values are not approximately equal, using …\nReturns the derivative at the given <code>t</code> on a one-dimensional …\nReturns the point at the given <code>t</code> on a one-dimensional …\nCubic interpolates between two values by the factor …\nCubic interpolates between two values by the factor …\nReturns the floating-point modulus of <code>self</code> divided by <code>pmod</code>…\nCheck if two angles are approximately equal, by comparing …\nCheck if <code>self</code> is within <code>Self::CMP_EPSILON</code> of <code>0.0</code>.\nLinearly interpolates from <code>self</code> to <code>to</code> by <code>weight</code>.\nLinearly interpolates between two angles (in radians) by a …\nGodot’s <code>sign</code> function, returns <code>0.0</code> when self is <code>0.0</code>.\nReturns the multiple of <code>step</code> that is closest to <code>self</code>.\nType that implements <code>Ord</code> for <code>StringNames</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGodot class <code>AStar2D.</code>\nGodot class <code>AStar3D.</code>\nGodot class <code>AStarGrid2D.</code>\nGodot class <code>AcceptDialog.</code>\nGodot class <code>AESContext.</code>\nGodot class <code>AnimatableBody2D.</code>\nGodot class <code>AnimatableBody3D.</code>\nGodot class <code>AnimatedSprite2D.</code>\nGodot class <code>AnimatedSprite3D.</code>\nGodot class <code>AnimatedTexture.</code>\nGodot class <code>Animation.</code>\nGodot class <code>AnimationLibrary.</code>\nGodot class <code>AnimationMixer.</code>\nGodot class <code>AnimationNode.</code>\nGodot class <code>AnimationNodeAdd2.</code>\nGodot class <code>AnimationNodeAdd3.</code>\nGodot class <code>AnimationNodeAnimation.</code>\nGodot class <code>AnimationNodeBlend2.</code>\nGodot class <code>AnimationNodeBlend3.</code>\nGodot class <code>AnimationNodeBlendSpace1D.</code>\nGodot class <code>AnimationNodeBlendSpace2D.</code>\nGodot class <code>AnimationNodeBlendTree.</code>\nGodot class <code>AnimationNodeOneShot.</code>\nGodot class <code>AnimationNodeOutput.</code>\nGodot class <code>AnimationNodeStateMachine.</code>\nGodot class <code>AnimationNodeStateMachinePlayback.</code>\nGodot class <code>AnimationNodeStateMachineTransition.</code>\nGodot class <code>AnimationNodeSub2.</code>\nGodot class <code>AnimationNodeSync.</code>\nGodot class <code>AnimationNodeTimeScale.</code>\nGodot class <code>AnimationNodeTimeSeek.</code>\nGodot class <code>AnimationNodeTransition.</code>\nGodot class <code>AnimationPlayer.</code>\nGodot class <code>AnimationRootNode.</code>\nGodot class <code>AnimationTree.</code>\nGodot class <code>Area2D.</code>\nGodot class <code>Area3D.</code>\nGodot class <code>ArrayMesh.</code>\nGodot class <code>ArrayOccluder3D.</code>\nGodot class <code>AspectRatioContainer.</code>\nGodot class <code>AtlasTexture.</code>\nGodot class <code>AudioBusLayout.</code>\nGodot class <code>AudioEffect.</code>\nGodot class <code>AudioEffectAmplify.</code>\nGodot class <code>AudioEffectBandLimitFilter.</code>\nGodot class <code>AudioEffectBandPassFilter.</code>\nGodot class <code>AudioEffectCapture.</code>\nGodot class <code>AudioEffectChorus.</code>\nGodot class <code>AudioEffectCompressor.</code>\nGodot class <code>AudioEffectDelay.</code>\nGodot class <code>AudioEffectDistortion.</code>\nGodot class <code>AudioEffectEQ.</code>\nGodot class <code>AudioEffectEQ10.</code>\nGodot class <code>AudioEffectEQ21.</code>\nGodot class <code>AudioEffectEQ6.</code>\nGodot class <code>AudioEffectFilter.</code>\nGodot class <code>AudioEffectHardLimiter.</code>\nGodot class <code>AudioEffectHighPassFilter.</code>\nGodot class <code>AudioEffectHighShelfFilter.</code>\nGodot class <code>AudioEffectInstance.</code>\nGodot class <code>AudioEffectLimiter.</code>\nGodot class <code>AudioEffectLowPassFilter.</code>\nGodot class <code>AudioEffectLowShelfFilter.</code>\nGodot class <code>AudioEffectNotchFilter.</code>\nGodot class <code>AudioEffectPanner.</code>\nGodot class <code>AudioEffectPhaser.</code>\nGodot class <code>AudioEffectPitchShift.</code>\nGodot class <code>AudioEffectRecord.</code>\nGodot class <code>AudioEffectReverb.</code>\nGodot class <code>AudioEffectSpectrumAnalyzer.</code>\nGodot class <code>AudioEffectSpectrumAnalyzerInstance.</code>\nGodot class <code>AudioEffectStereoEnhance.</code>\nGodot class <code>AudioListener2D.</code>\nGodot class <code>AudioListener3D.</code>\nGodot class <code>AudioSample.</code>\nGodot class <code>AudioSamplePlayback.</code>\nGodot class <code>AudioServer.</code>\nGodot class <code>AudioStream.</code>\nGodot class <code>AudioStreamGenerator.</code>\nGodot class <code>AudioStreamGeneratorPlayback.</code>\nGodot class <code>AudioStreamInteractive.</code>\nGodot class <code>AudioStreamMicrophone.</code>\nGodot class <code>AudioStreamMP3.</code>\nGodot class <code>AudioStreamOggVorbis.</code>\nGodot class <code>AudioStreamPlayback.</code>\nGodot class <code>AudioStreamPlaybackInteractive.</code>\nGodot class <code>AudioStreamPlaybackOggVorbis.</code>\nGodot class <code>AudioStreamPlaybackPlaylist.</code>\nGodot class <code>AudioStreamPlaybackPolyphonic.</code>\nGodot class <code>AudioStreamPlaybackResampled.</code>\nGodot class <code>AudioStreamPlaybackSynchronized.</code>\nGodot class <code>AudioStreamPlayer.</code>\nGodot class <code>AudioStreamPlayer2D.</code>\nGodot class <code>AudioStreamPlayer3D.</code>\nGodot class <code>AudioStreamPlaylist.</code>\nGodot class <code>AudioStreamPolyphonic.</code>\nGodot class <code>AudioStreamRandomizer.</code>\nGodot class <code>AudioStreamSynchronized.</code>\nGodot class <code>AudioStreamWAV.</code>\nGodot class <code>BackBufferCopy.</code>\nGodot class <code>BaseButton.</code>\nGodot class <code>BaseMaterial3D.</code>\nGodot class <code>BitMap.</code>\nGodot class <code>Bone2D.</code>\nGodot class <code>BoneAttachment3D.</code>\nGodot class <code>BoneMap.</code>\nGodot class <code>BoxContainer.</code>\nGodot class <code>BoxMesh.</code>\nGodot class <code>BoxOccluder3D.</code>\nGodot class <code>BoxShape3D.</code>\nGodot class <code>Button.</code>\nGodot class <code>ButtonGroup.</code>\nGodot class <code>CallbackTweener.</code>\nGodot class <code>Camera2D.</code>\nGodot class <code>Camera3D.</code>\nGodot class <code>CameraAttributes.</code>\nGodot class <code>CameraAttributesPhysical.</code>\nGodot class <code>CameraAttributesPractical.</code>\nGodot class <code>CameraFeed.</code>\nGodot class <code>CameraServer.</code>\nGodot class <code>CameraTexture.</code>\nGodot class <code>CanvasGroup.</code>\nGodot class <code>CanvasItem.</code>\nGodot class <code>CanvasItemMaterial.</code>\nGodot class <code>CanvasLayer.</code>\nGodot class <code>CanvasModulate.</code>\nGodot class <code>CanvasTexture.</code>\nGodot class <code>CapsuleMesh.</code>\nGodot class <code>CapsuleShape2D.</code>\nGodot class <code>CapsuleShape3D.</code>\nGodot class <code>CenterContainer.</code>\nGodot class <code>CharFXTransform.</code>\nGodot class <code>CharacterBody2D.</code>\nGodot class <code>CharacterBody3D.</code>\nGodot class <code>CheckBox.</code>\nGodot class <code>CheckButton.</code>\nGodot class <code>CircleShape2D.</code>\nGodot class <code>ClassDB.</code>\nGodot class <code>CodeEdit.</code>\nGodot class <code>CodeHighlighter.</code>\nGodot class <code>CollisionObject2D.</code>\nGodot class <code>CollisionObject3D.</code>\nGodot class <code>CollisionPolygon2D.</code>\nGodot class <code>CollisionPolygon3D.</code>\nGodot class <code>CollisionShape2D.</code>\nGodot class <code>CollisionShape3D.</code>\nGodot class <code>ColorPicker.</code>\nGodot class <code>ColorPickerButton.</code>\nGodot class <code>ColorRect.</code>\nGodot class <code>Compositor.</code>\nGodot class <code>CompositorEffect.</code>\nGodot class <code>CompressedCubemap.</code>\nGodot class <code>CompressedCubemapArray.</code>\nGodot class <code>CompressedTexture2D.</code>\nGodot class <code>CompressedTexture2DArray.</code>\nGodot class <code>CompressedTexture3D.</code>\nGodot class <code>CompressedTextureLayered.</code>\nGodot class <code>ConcavePolygonShape2D.</code>\nGodot class <code>ConcavePolygonShape3D.</code>\nGodot class <code>ConeTwistJoint3D.</code>\nGodot class <code>ConfigFile.</code>\nGodot class <code>ConfirmationDialog.</code>\nGodot class <code>Container.</code>\nGodot class <code>Control.</code>\nGodot class <code>ConvexPolygonShape2D.</code>\nGodot class <code>ConvexPolygonShape3D.</code>\nGodot class <code>CPUParticles2D.</code>\nGodot class <code>CPUParticles3D.</code>\nGodot class <code>Crypto.</code>\nGodot class <code>CryptoKey.</code>\nGodot class <code>CSGBox3D.</code>\nGodot class <code>CSGCombiner3D.</code>\nGodot class <code>CSGCylinder3D.</code>\nGodot class <code>CSGMesh3D.</code>\nGodot class <code>CSGPolygon3D.</code>\nGodot class <code>CSGPrimitive3D.</code>\nGodot class <code>CSGShape3D.</code>\nGodot class <code>CSGSphere3D.</code>\nGodot class <code>CSGTorus3D.</code>\nGodot class <code>Cubemap.</code>\nGodot class <code>CubemapArray.</code>\nGodot class <code>Curve.</code>\nGodot class <code>Curve2D.</code>\nGodot class <code>Curve3D.</code>\nGodot class <code>CurveTexture.</code>\nGodot class <code>CurveXYZTexture.</code>\nGodot class <code>CylinderMesh.</code>\nGodot class <code>CylinderShape3D.</code>\nGodot class <code>DampedSpringJoint2D.</code>\nGodot class <code>Decal.</code>\nGodot class <code>DirAccess.</code>\nGodot class <code>DirectionalLight2D.</code>\nGodot class <code>DirectionalLight3D.</code>\nGodot class <code>DisplayServer.</code>\nGodot class <code>DTLSServer.</code>\nGodot class <code>ENetConnection.</code>\nGodot class <code>ENetMultiplayerPeer.</code>\nGodot class <code>ENetPacketPeer.</code>\nGodot class <code>EditorCommandPalette.</code>\nGodot class <code>EditorDebuggerPlugin.</code>\nGodot class <code>EditorDebuggerSession.</code>\nGodot class <code>EditorExportPlatform.</code>\nGodot class <code>EditorExportPlatformAndroid.</code>\nGodot class <code>EditorExportPlatformIOS.</code>\nGodot class <code>EditorExportPlatformLinuxBSD.</code>\nGodot class <code>EditorExportPlatformMacOS.</code>\nGodot class <code>EditorExportPlatformPC.</code>\nGodot class <code>EditorExportPlatformWeb.</code>\nGodot class <code>EditorExportPlatformWindows.</code>\nGodot class <code>EditorExportPlugin.</code>\nGodot class <code>EditorFeatureProfile.</code>\nGodot class <code>EditorFileDialog.</code>\nGodot class <code>EditorFileSystem.</code>\nGodot class <code>EditorFileSystemDirectory.</code>\nGodot class <code>EditorFileSystemImportFormatSupportQuery.</code>\nGodot class <code>EditorImportPlugin.</code>\nGodot class <code>EditorInspector.</code>\nGodot class <code>EditorInspectorPlugin.</code>\nGodot class <code>EditorInterface.</code>\nGodot class <code>EditorNode3DGizmo.</code>\nGodot class <code>EditorNode3DGizmoPlugin.</code>\nGodot class <code>EditorPaths.</code>\nGodot class <code>EditorPlugin.</code>\nGodot class <code>EditorProperty.</code>\nGodot class <code>EditorResourceConversionPlugin.</code>\nGodot class <code>EditorResourcePicker.</code>\nGodot class <code>EditorResourcePreview.</code>\nGodot class <code>EditorResourcePreviewGenerator.</code>\nGodot class <code>EditorResourceTooltipPlugin.</code>\nGodot class <code>EditorSceneFormatImporter.</code>\nGodot class <code>EditorSceneFormatImporterBlend.</code>\nGodot class <code>EditorSceneFormatImporterFBX2GLTF.</code>\nGodot class <code>EditorSceneFormatImporterGLTF.</code>\nGodot class <code>EditorSceneFormatImporterUFBX.</code>\nGodot class <code>EditorScenePostImport.</code>\nGodot class <code>EditorScenePostImportPlugin.</code>\nGodot class <code>EditorScript.</code>\nGodot class <code>EditorScriptPicker.</code>\nGodot class <code>EditorSelection.</code>\nGodot class <code>EditorSettings.</code>\nGodot class <code>EditorSpinSlider.</code>\nGodot class <code>EditorSyntaxHighlighter.</code>\nGodot class <code>EditorTranslationParserPlugin.</code>\nGodot class <code>EditorUndoRedoManager.</code>\nGodot class <code>EditorVCSInterface.</code>\nGodot class <code>EncodedObjectAsID.</code>\nGodot class <code>Engine.</code>\nGodot class <code>EngineDebugger.</code>\nGodot class <code>EngineProfiler.</code>\nGodot class <code>Environment.</code>\nGodot class <code>Expression.</code>\nGodot class <code>FastNoiseLite.</code>\nGodot class <code>FBXDocument.</code>\nGodot class <code>FBXState.</code>\nGodot class <code>FileAccess.</code>\nGodot class <code>FileDialog.</code>\nGodot class <code>FileSystemDock.</code>\nGodot class <code>FlowContainer.</code>\nGodot class <code>FogMaterial.</code>\nGodot class <code>FogVolume.</code>\nGodot class <code>Font.</code>\nGodot class <code>FontFile.</code>\nGodot class <code>FontVariation.</code>\nGodot class <code>GDExtension.</code>\nGodot class <code>GDExtensionManager.</code>\nGodot class <code>GDScript.</code>\nGodot class <code>Generic6DOFJoint3D.</code>\nGodot class <code>Geometry2D.</code>\nGodot class <code>Geometry3D.</code>\nGodot class <code>GeometryInstance3D.</code>\nGodot class <code>GLTFAccessor.</code>\nGodot class <code>GLTFAnimation.</code>\nGodot class <code>GLTFBufferView.</code>\nGodot class <code>GLTFCamera.</code>\nGodot class <code>GLTFDocument.</code>\nGodot class <code>GLTFDocumentExtension.</code>\nGodot class <code>GLTFDocumentExtensionConvertImporterMesh.</code>\nGodot class <code>GLTFLight.</code>\nGodot class <code>GLTFMesh.</code>\nGodot class <code>GLTFNode.</code>\nGodot class <code>GLTFPhysicsBody.</code>\nGodot class <code>GLTFPhysicsShape.</code>\nGodot class <code>GLTFSkeleton.</code>\nGodot class <code>GLTFSkin.</code>\nGodot class <code>GLTFSpecGloss.</code>\nGodot class <code>GLTFState.</code>\nGodot class <code>GLTFTexture.</code>\nGodot class <code>GLTFTextureSampler.</code>\nGodot class <code>GPUParticles2D.</code>\nGodot class <code>GPUParticles3D.</code>\nGodot class <code>GPUParticlesAttractor3D.</code>\nGodot class <code>GPUParticlesAttractorBox3D.</code>\nGodot class <code>GPUParticlesAttractorSphere3D.</code>\nGodot class <code>GPUParticlesAttractorVectorField3D.</code>\nGodot class <code>GPUParticlesCollision3D.</code>\nGodot class <code>GPUParticlesCollisionBox3D.</code>\nGodot class <code>GPUParticlesCollisionHeightField3D.</code>\nGodot class <code>GPUParticlesCollisionSDF3D.</code>\nGodot class <code>GPUParticlesCollisionSphere3D.</code>\nGodot class <code>Gradient.</code>\nGodot class <code>GradientTexture1D.</code>\nGodot class <code>GradientTexture2D.</code>\nGodot class <code>GraphEdit.</code>\nGodot class <code>GraphElement.</code>\nGodot class <code>GraphFrame.</code>\nGodot class <code>GraphNode.</code>\nGodot class <code>GridContainer.</code>\nGodot class <code>GridMap.</code>\nGodot class <code>GrooveJoint2D.</code>\nGodot class <code>HBoxContainer.</code>\nGodot class <code>HFlowContainer.</code>\nGodot class <code>HScrollBar.</code>\nGodot class <code>HSeparator.</code>\nGodot class <code>HSlider.</code>\nGodot class <code>HSplitContainer.</code>\nGodot class <code>HashingContext.</code>\nGodot class <code>HeightMapShape3D.</code>\nGodot class <code>HingeJoint3D.</code>\nGodot class <code>HMACContext.</code>\nGodot class <code>HTTPClient.</code>\nGodot class <code>HTTPRequest.</code>\nVirtual methods for class <code>AStar2D</code>.\nVirtual methods for class <code>AStar3D</code>.\nVirtual methods for class <code>AStarGrid2D</code>.\nVirtual methods for class <code>AcceptDialog</code>.\nVirtual methods for class <code>AesContext</code>.\nVirtual methods for class <code>AnimatableBody2D</code>.\nVirtual methods for class <code>AnimatableBody3D</code>.\nVirtual methods for class <code>AnimatedSprite2D</code>.\nVirtual methods for class <code>AnimatedSprite3D</code>.\nVirtual methods for class <code>AnimatedTexture</code>.\nVirtual methods for class <code>Animation</code>.\nVirtual methods for class <code>AnimationLibrary</code>.\nVirtual methods for class <code>AnimationMixer</code>.\nVirtual methods for class <code>AnimationNode</code>.\nVirtual methods for class <code>AnimationNodeAdd2</code>.\nVirtual methods for class <code>AnimationNodeAdd3</code>.\nVirtual methods for class <code>AnimationNodeAnimation</code>.\nVirtual methods for class <code>AnimationNodeBlend2</code>.\nVirtual methods for class <code>AnimationNodeBlend3</code>.\nVirtual methods for class <code>AnimationNodeBlendSpace1D</code>.\nVirtual methods for class <code>AnimationNodeBlendSpace2D</code>.\nVirtual methods for class <code>AnimationNodeBlendTree</code>.\nVirtual methods for class <code>AnimationNodeOneShot</code>.\nVirtual methods for class <code>AnimationNodeOutput</code>.\nVirtual methods for class <code>AnimationNodeStateMachine</code>.\nVirtual methods for class <code>AnimationNodeStateMachinePlayback</code>…\nVirtual methods for class …\nVirtual methods for class <code>AnimationNodeSub2</code>.\nVirtual methods for class <code>AnimationNodeSync</code>.\nVirtual methods for class <code>AnimationNodeTimeScale</code>.\nVirtual methods for class <code>AnimationNodeTimeSeek</code>.\nVirtual methods for class <code>AnimationNodeTransition</code>.\nVirtual methods for class <code>AnimationPlayer</code>.\nVirtual methods for class <code>AnimationRootNode</code>.\nVirtual methods for class <code>AnimationTree</code>.\nVirtual methods for class <code>Area2D</code>.\nVirtual methods for class <code>Area3D</code>.\nVirtual methods for class <code>ArrayMesh</code>.\nVirtual methods for class <code>ArrayOccluder3D</code>.\nVirtual methods for class <code>AspectRatioContainer</code>.\nVirtual methods for class <code>AtlasTexture</code>.\nVirtual methods for class <code>AudioBusLayout</code>.\nVirtual methods for class <code>AudioEffect</code>.\nVirtual methods for class <code>AudioEffectAmplify</code>.\nVirtual methods for class <code>AudioEffectBandLimitFilter</code>.\nVirtual methods for class <code>AudioEffectBandPassFilter</code>.\nVirtual methods for class <code>AudioEffectCapture</code>.\nVirtual methods for class <code>AudioEffectChorus</code>.\nVirtual methods for class <code>AudioEffectCompressor</code>.\nVirtual methods for class <code>AudioEffectDelay</code>.\nVirtual methods for class <code>AudioEffectDistortion</code>.\nVirtual methods for class <code>AudioEffectEq</code>.\nVirtual methods for class <code>AudioEffectEq10</code>.\nVirtual methods for class <code>AudioEffectEq21</code>.\nVirtual methods for class <code>AudioEffectEq6</code>.\nVirtual methods for class <code>AudioEffectFilter</code>.\nVirtual methods for class <code>AudioEffectHardLimiter</code>.\nVirtual methods for class <code>AudioEffectHighPassFilter</code>.\nVirtual methods for class <code>AudioEffectHighShelfFilter</code>.\nVirtual methods for class <code>AudioEffectInstance</code>.\nVirtual methods for class <code>AudioEffectLimiter</code>.\nVirtual methods for class <code>AudioEffectLowPassFilter</code>.\nVirtual methods for class <code>AudioEffectLowShelfFilter</code>.\nVirtual methods for class <code>AudioEffectNotchFilter</code>.\nVirtual methods for class <code>AudioEffectPanner</code>.\nVirtual methods for class <code>AudioEffectPhaser</code>.\nVirtual methods for class <code>AudioEffectPitchShift</code>.\nVirtual methods for class <code>AudioEffectRecord</code>.\nVirtual methods for class <code>AudioEffectReverb</code>.\nVirtual methods for class <code>AudioEffectSpectrumAnalyzer</code>.\nVirtual methods for class …\nVirtual methods for class <code>AudioEffectStereoEnhance</code>.\nVirtual methods for class <code>AudioListener2D</code>.\nVirtual methods for class <code>AudioListener3D</code>.\nVirtual methods for class <code>AudioSample</code>.\nVirtual methods for class <code>AudioSamplePlayback</code>.\nVirtual methods for class <code>AudioServer</code>.\nVirtual methods for class <code>AudioStream</code>.\nVirtual methods for class <code>AudioStreamGenerator</code>.\nVirtual methods for class <code>AudioStreamGeneratorPlayback</code>.\nVirtual methods for class <code>AudioStreamInteractive</code>.\nVirtual methods for class <code>AudioStreamMicrophone</code>.\nVirtual methods for class <code>AudioStreamMp3</code>.\nVirtual methods for class <code>AudioStreamOggVorbis</code>.\nVirtual methods for class <code>AudioStreamPlayback</code>.\nVirtual methods for class <code>AudioStreamPlaybackInteractive</code>.\nVirtual methods for class <code>AudioStreamPlaybackOggVorbis</code>.\nVirtual methods for class <code>AudioStreamPlaybackPlaylist</code>.\nVirtual methods for class <code>AudioStreamPlaybackPolyphonic</code>.\nVirtual methods for class <code>AudioStreamPlaybackResampled</code>.\nVirtual methods for class <code>AudioStreamPlaybackSynchronized</code>.\nVirtual methods for class <code>AudioStreamPlayer</code>.\nVirtual methods for class <code>AudioStreamPlayer2D</code>.\nVirtual methods for class <code>AudioStreamPlayer3D</code>.\nVirtual methods for class <code>AudioStreamPlaylist</code>.\nVirtual methods for class <code>AudioStreamPolyphonic</code>.\nVirtual methods for class <code>AudioStreamRandomizer</code>.\nVirtual methods for class <code>AudioStreamSynchronized</code>.\nVirtual methods for class <code>AudioStreamWav</code>.\nVirtual methods for class <code>BackBufferCopy</code>.\nVirtual methods for class <code>BaseButton</code>.\nVirtual methods for class <code>BaseMaterial3D</code>.\nVirtual methods for class <code>BitMap</code>.\nVirtual methods for class <code>Bone2D</code>.\nVirtual methods for class <code>BoneAttachment3D</code>.\nVirtual methods for class <code>BoneMap</code>.\nVirtual methods for class <code>BoxContainer</code>.\nVirtual methods for class <code>BoxMesh</code>.\nVirtual methods for class <code>BoxOccluder3D</code>.\nVirtual methods for class <code>BoxShape3D</code>.\nVirtual methods for class <code>Button</code>.\nVirtual methods for class <code>ButtonGroup</code>.\nVirtual methods for class <code>CallbackTweener</code>.\nVirtual methods for class <code>Camera2D</code>.\nVirtual methods for class <code>Camera3D</code>.\nVirtual methods for class <code>CameraAttributes</code>.\nVirtual methods for class <code>CameraAttributesPhysical</code>.\nVirtual methods for class <code>CameraAttributesPractical</code>.\nVirtual methods for class <code>CameraFeed</code>.\nVirtual methods for class <code>CameraServer</code>.\nVirtual methods for class <code>CameraTexture</code>.\nVirtual methods for class <code>CanvasGroup</code>.\nVirtual methods for class <code>CanvasItem</code>.\nVirtual methods for class <code>CanvasItemMaterial</code>.\nVirtual methods for class <code>CanvasLayer</code>.\nVirtual methods for class <code>CanvasModulate</code>.\nVirtual methods for class <code>CanvasTexture</code>.\nVirtual methods for class <code>CapsuleMesh</code>.\nVirtual methods for class <code>CapsuleShape2D</code>.\nVirtual methods for class <code>CapsuleShape3D</code>.\nVirtual methods for class <code>CenterContainer</code>.\nVirtual methods for class <code>CharFxTransform</code>.\nVirtual methods for class <code>CharacterBody2D</code>.\nVirtual methods for class <code>CharacterBody3D</code>.\nVirtual methods for class <code>CheckBox</code>.\nVirtual methods for class <code>CheckButton</code>.\nVirtual methods for class <code>CircleShape2D</code>.\nVirtual methods for class <code>ClassDb</code>.\nVirtual methods for class <code>CodeEdit</code>.\nVirtual methods for class <code>CodeHighlighter</code>.\nVirtual methods for class <code>CollisionObject2D</code>.\nVirtual methods for class <code>CollisionObject3D</code>.\nVirtual methods for class <code>CollisionPolygon2D</code>.\nVirtual methods for class <code>CollisionPolygon3D</code>.\nVirtual methods for class <code>CollisionShape2D</code>.\nVirtual methods for class <code>CollisionShape3D</code>.\nVirtual methods for class <code>ColorPicker</code>.\nVirtual methods for class <code>ColorPickerButton</code>.\nVirtual methods for class <code>ColorRect</code>.\nVirtual methods for class <code>Compositor</code>.\nVirtual methods for class <code>CompositorEffect</code>.\nVirtual methods for class <code>CompressedCubemap</code>.\nVirtual methods for class <code>CompressedCubemapArray</code>.\nVirtual methods for class <code>CompressedTexture2D</code>.\nVirtual methods for class <code>CompressedTexture2DArray</code>.\nVirtual methods for class <code>CompressedTexture3D</code>.\nVirtual methods for class <code>CompressedTextureLayered</code>.\nVirtual methods for class <code>ConcavePolygonShape2D</code>.\nVirtual methods for class <code>ConcavePolygonShape3D</code>.\nVirtual methods for class <code>ConeTwistJoint3D</code>.\nVirtual methods for class <code>ConfigFile</code>.\nVirtual methods for class <code>ConfirmationDialog</code>.\nVirtual methods for class <code>Container</code>.\nVirtual methods for class <code>Control</code>.\nVirtual methods for class <code>ConvexPolygonShape2D</code>.\nVirtual methods for class <code>ConvexPolygonShape3D</code>.\nVirtual methods for class <code>CpuParticles2D</code>.\nVirtual methods for class <code>CpuParticles3D</code>.\nVirtual methods for class <code>Crypto</code>.\nVirtual methods for class <code>CryptoKey</code>.\nVirtual methods for class <code>CsgBox3D</code>.\nVirtual methods for class <code>CsgCombiner3D</code>.\nVirtual methods for class <code>CsgCylinder3D</code>.\nVirtual methods for class <code>CsgMesh3D</code>.\nVirtual methods for class <code>CsgPolygon3D</code>.\nVirtual methods for class <code>CsgPrimitive3D</code>.\nVirtual methods for class <code>CsgShape3D</code>.\nVirtual methods for class <code>CsgSphere3D</code>.\nVirtual methods for class <code>CsgTorus3D</code>.\nVirtual methods for class <code>Cubemap</code>.\nVirtual methods for class <code>CubemapArray</code>.\nVirtual methods for class <code>Curve</code>.\nVirtual methods for class <code>Curve2D</code>.\nVirtual methods for class <code>Curve3D</code>.\nVirtual methods for class <code>CurveTexture</code>.\nVirtual methods for class <code>CurveXyzTexture</code>.\nVirtual methods for class <code>CylinderMesh</code>.\nVirtual methods for class <code>CylinderShape3D</code>.\nVirtual methods for class <code>DampedSpringJoint2D</code>.\nVirtual methods for class <code>Decal</code>.\nVirtual methods for class <code>DirAccess</code>.\nVirtual methods for class <code>DirectionalLight2D</code>.\nVirtual methods for class <code>DirectionalLight3D</code>.\nVirtual methods for class <code>DisplayServer</code>.\nVirtual methods for class <code>DtlsServer</code>.\nVirtual methods for class <code>ENetConnection</code>.\nVirtual methods for class <code>ENetMultiplayerPeer</code>.\nVirtual methods for class <code>ENetPacketPeer</code>.\nVirtual methods for class <code>EditorCommandPalette</code>.\nVirtual methods for class <code>EditorDebuggerPlugin</code>.\nVirtual methods for class <code>EditorDebuggerSession</code>.\nVirtual methods for class <code>EditorExportPlatform</code>.\nVirtual methods for class <code>EditorExportPlatformAndroid</code>.\nVirtual methods for class <code>EditorExportPlatformIos</code>.\nVirtual methods for class <code>EditorExportPlatformLinuxBsd</code>.\nVirtual methods for class <code>EditorExportPlatformMacOs</code>.\nVirtual methods for class <code>EditorExportPlatformPc</code>.\nVirtual methods for class <code>EditorExportPlatformWeb</code>.\nVirtual methods for class <code>EditorExportPlatformWindows</code>.\nVirtual methods for class <code>EditorExportPlugin</code>.\nVirtual methods for class <code>EditorFeatureProfile</code>.\nVirtual methods for class <code>EditorFileDialog</code>.\nVirtual methods for class <code>EditorFileSystem</code>.\nVirtual methods for class <code>EditorFileSystemDirectory</code>.\nVirtual methods for class …\nVirtual methods for class <code>EditorImportPlugin</code>.\nVirtual methods for class <code>EditorInspector</code>.\nVirtual methods for class <code>EditorInspectorPlugin</code>.\nVirtual methods for class <code>EditorInterface</code>.\nVirtual methods for class <code>EditorNode3DGizmo</code>.\nVirtual methods for class <code>EditorNode3DGizmoPlugin</code>.\nVirtual methods for class <code>EditorPaths</code>.\nVirtual methods for class <code>EditorPlugin</code>.\nVirtual methods for class <code>EditorProperty</code>.\nVirtual methods for class <code>EditorResourceConversionPlugin</code>.\nVirtual methods for class <code>EditorResourcePicker</code>.\nVirtual methods for class <code>EditorResourcePreview</code>.\nVirtual methods for class <code>EditorResourcePreviewGenerator</code>.\nVirtual methods for class <code>EditorResourceTooltipPlugin</code>.\nVirtual methods for class <code>EditorSceneFormatImporter</code>.\nVirtual methods for class <code>EditorSceneFormatImporterBlend</code>.\nVirtual methods for class <code>EditorSceneFormatImporterFbx2gltf</code>…\nVirtual methods for class <code>EditorSceneFormatImporterGltf</code>.\nVirtual methods for class <code>EditorSceneFormatImporterUfbx</code>.\nVirtual methods for class <code>EditorScenePostImport</code>.\nVirtual methods for class <code>EditorScenePostImportPlugin</code>.\nVirtual methods for class <code>EditorScript</code>.\nVirtual methods for class <code>EditorScriptPicker</code>.\nVirtual methods for class <code>EditorSelection</code>.\nVirtual methods for class <code>EditorSettings</code>.\nVirtual methods for class <code>EditorSpinSlider</code>.\nVirtual methods for class <code>EditorSyntaxHighlighter</code>.\nVirtual methods for class <code>EditorTranslationParserPlugin</code>.\nVirtual methods for class <code>EditorUndoRedoManager</code>.\nVirtual methods for class <code>EditorVcsInterface</code>.\nVirtual methods for class <code>EncodedObjectAsId</code>.\nVirtual methods for class <code>Engine</code>.\nVirtual methods for class <code>EngineDebugger</code>.\nVirtual methods for class <code>EngineProfiler</code>.\nVirtual methods for class <code>Environment</code>.\nVirtual methods for class <code>Expression</code>.\nVirtual methods for class <code>FastNoiseLite</code>.\nVirtual methods for class <code>FbxDocument</code>.\nVirtual methods for class <code>FbxState</code>.\nVirtual methods for class <code>FileAccess</code>.\nVirtual methods for class <code>FileDialog</code>.\nVirtual methods for class <code>FileSystemDock</code>.\nVirtual methods for class <code>FlowContainer</code>.\nVirtual methods for class <code>FogMaterial</code>.\nVirtual methods for class <code>FogVolume</code>.\nVirtual methods for class <code>Font</code>.\nVirtual methods for class <code>FontFile</code>.\nVirtual methods for class <code>FontVariation</code>.\nVirtual methods for class <code>GDExtension</code>.\nVirtual methods for class <code>GDExtensionManager</code>.\nVirtual methods for class <code>GDScript</code>.\nVirtual methods for class <code>Generic6DofJoint3D</code>.\nVirtual methods for class <code>Geometry2D</code>.\nVirtual methods for class <code>Geometry3D</code>.\nVirtual methods for class <code>GeometryInstance3D</code>.\nVirtual methods for class <code>GltfAccessor</code>.\nVirtual methods for class <code>GltfAnimation</code>.\nVirtual methods for class <code>GltfBufferView</code>.\nVirtual methods for class <code>GltfCamera</code>.\nVirtual methods for class <code>GltfDocument</code>.\nVirtual methods for class <code>GltfDocumentExtension</code>.\nVirtual methods for class …\nVirtual methods for class <code>GltfLight</code>.\nVirtual methods for class <code>GltfMesh</code>.\nVirtual methods for class <code>GltfNode</code>.\nVirtual methods for class <code>GltfPhysicsBody</code>.\nVirtual methods for class <code>GltfPhysicsShape</code>.\nVirtual methods for class <code>GltfSkeleton</code>.\nVirtual methods for class <code>GltfSkin</code>.\nVirtual methods for class <code>GltfSpecGloss</code>.\nVirtual methods for class <code>GltfState</code>.\nVirtual methods for class <code>GltfTexture</code>.\nVirtual methods for class <code>GltfTextureSampler</code>.\nVirtual methods for class <code>GpuParticles2D</code>.\nVirtual methods for class <code>GpuParticles3D</code>.\nVirtual methods for class <code>GpuParticlesAttractor3D</code>.\nVirtual methods for class <code>GpuParticlesAttractorBox3D</code>.\nVirtual methods for class <code>GpuParticlesAttractorSphere3D</code>.\nVirtual methods for class …\nVirtual methods for class <code>GpuParticlesCollision3D</code>.\nVirtual methods for class <code>GpuParticlesCollisionBox3D</code>.\nVirtual methods for class …\nVirtual methods for class <code>GpuParticlesCollisionSdf3d</code>.\nVirtual methods for class <code>GpuParticlesCollisionSphere3D</code>.\nVirtual methods for class <code>Gradient</code>.\nVirtual methods for class <code>GradientTexture1D</code>.\nVirtual methods for class <code>GradientTexture2D</code>.\nVirtual methods for class <code>GraphEdit</code>.\nVirtual methods for class <code>GraphElement</code>.\nVirtual methods for class <code>GraphFrame</code>.\nVirtual methods for class <code>GraphNode</code>.\nVirtual methods for class <code>GridContainer</code>.\nVirtual methods for class <code>GridMap</code>.\nVirtual methods for class <code>GrooveJoint2D</code>.\nVirtual methods for class <code>HBoxContainer</code>.\nVirtual methods for class <code>HFlowContainer</code>.\nVirtual methods for class <code>HScrollBar</code>.\nVirtual methods for class <code>HSeparator</code>.\nVirtual methods for class <code>HSlider</code>.\nVirtual methods for class <code>HSplitContainer</code>.\nVirtual methods for class <code>HashingContext</code>.\nVirtual methods for class <code>HeightMapShape3D</code>.\nVirtual methods for class <code>HingeJoint3D</code>.\nVirtual methods for class <code>HmacContext</code>.\nVirtual methods for class <code>HttpClient</code>.\nVirtual methods for class <code>HttpRequest</code>.\nVirtual methods for class <code>Image</code>.\nVirtual methods for class <code>ImageFormatLoader</code>.\nVirtual methods for class <code>ImageFormatLoaderExtension</code>.\nVirtual methods for class <code>ImageTexture</code>.\nVirtual methods for class <code>ImageTexture3D</code>.\nVirtual methods for class <code>ImageTextureLayered</code>.\nVirtual methods for class <code>ImmediateMesh</code>.\nVirtual methods for class <code>ImporterMesh</code>.\nVirtual methods for class <code>ImporterMeshInstance3D</code>.\nVirtual methods for class <code>Input</code>.\nVirtual methods for class <code>InputEvent</code>.\nVirtual methods for class <code>InputEventAction</code>.\nVirtual methods for class <code>InputEventFromWindow</code>.\nVirtual methods for class <code>InputEventGesture</code>.\nVirtual methods for class <code>InputEventJoypadButton</code>.\nVirtual methods for class <code>InputEventJoypadMotion</code>.\nVirtual methods for class <code>InputEventKey</code>.\nVirtual methods for class <code>InputEventMagnifyGesture</code>.\nVirtual methods for class <code>InputEventMidi</code>.\nVirtual methods for class <code>InputEventMouse</code>.\nVirtual methods for class <code>InputEventMouseButton</code>.\nVirtual methods for class <code>InputEventMouseMotion</code>.\nVirtual methods for class <code>InputEventPanGesture</code>.\nVirtual methods for class <code>InputEventScreenDrag</code>.\nVirtual methods for class <code>InputEventScreenTouch</code>.\nVirtual methods for class <code>InputEventShortcut</code>.\nVirtual methods for class <code>InputEventWithModifiers</code>.\nVirtual methods for class <code>InputMap</code>.\nVirtual methods for class <code>InstancePlaceholder</code>.\nVirtual methods for class <code>IntervalTweener</code>.\nVirtual methods for class <code>Ip</code>.\nVirtual methods for class <code>ItemList</code>.\nVirtual methods for class <code>Joint2D</code>.\nVirtual methods for class <code>Joint3D</code>.\nVirtual methods for class <code>Json</code>.\nVirtual methods for class <code>JsonRpc</code>.\nVirtual methods for class <code>KinematicCollision2D</code>.\nVirtual methods for class <code>KinematicCollision3D</code>.\nVirtual methods for class <code>Label</code>.\nVirtual methods for class <code>Label3D</code>.\nVirtual methods for class <code>LabelSettings</code>.\nVirtual methods for class <code>Light2D</code>.\nVirtual methods for class <code>Light3D</code>.\nVirtual methods for class <code>LightOccluder2D</code>.\nVirtual methods for class <code>LightmapGi</code>.\nVirtual methods for class <code>LightmapGiData</code>.\nVirtual methods for class <code>LightmapProbe</code>.\nVirtual methods for class <code>Lightmapper</code>.\nVirtual methods for class <code>LightmapperRd</code>.\nVirtual methods for class <code>Line2D</code>.\nVirtual methods for class <code>LineEdit</code>.\nVirtual methods for class <code>LinkButton</code>.\nVirtual methods for class <code>MainLoop</code>.\nVirtual methods for class <code>MarginContainer</code>.\nVirtual methods for class <code>Marker2D</code>.\nVirtual methods for class <code>Marker3D</code>.\nVirtual methods for class <code>Marshalls</code>.\nVirtual methods for class <code>Material</code>.\nVirtual methods for class <code>MenuBar</code>.\nVirtual methods for class <code>MenuButton</code>.\nVirtual methods for class <code>Mesh</code>.\nVirtual methods for class <code>MeshConvexDecompositionSettings</code>.\nVirtual methods for class <code>MeshDataTool</code>.\nVirtual methods for class <code>MeshInstance2D</code>.\nVirtual methods for class <code>MeshInstance3D</code>.\nVirtual methods for class <code>MeshLibrary</code>.\nVirtual methods for class <code>MeshTexture</code>.\nVirtual methods for class <code>MethodTweener</code>.\nVirtual methods for class <code>MissingNode</code>.\nVirtual methods for class <code>MissingResource</code>.\nVirtual methods for class <code>MobileVrInterface</code>.\nVirtual methods for class <code>MovieWriter</code>.\nVirtual methods for class <code>MultiMesh</code>.\nVirtual methods for class <code>MultiMeshInstance2D</code>.\nVirtual methods for class <code>MultiMeshInstance3D</code>.\nVirtual methods for class <code>MultiplayerApi</code>.\nVirtual methods for class <code>MultiplayerApiExtension</code>.\nVirtual methods for class <code>MultiplayerPeer</code>.\nVirtual methods for class <code>MultiplayerPeerExtension</code>.\nVirtual methods for class <code>MultiplayerSpawner</code>.\nVirtual methods for class <code>MultiplayerSynchronizer</code>.\nVirtual methods for class <code>NativeMenu</code>.\nVirtual methods for class <code>NavigationAgent2D</code>.\nVirtual methods for class <code>NavigationAgent3D</code>.\nVirtual methods for class <code>NavigationLink2D</code>.\nVirtual methods for class <code>NavigationLink3D</code>.\nVirtual methods for class <code>NavigationMesh</code>.\nVirtual methods for class <code>NavigationMeshGenerator</code>.\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class <code>NavigationObstacle2D</code>.\nVirtual methods for class <code>NavigationObstacle3D</code>.\nVirtual methods for class <code>NavigationPathQueryParameters2D</code>.\nVirtual methods for class <code>NavigationPathQueryParameters3D</code>.\nVirtual methods for class <code>NavigationPathQueryResult2D</code>.\nVirtual methods for class <code>NavigationPathQueryResult3D</code>.\nVirtual methods for class <code>NavigationPolygon</code>.\nVirtual methods for class <code>NavigationRegion2D</code>.\nVirtual methods for class <code>NavigationRegion3D</code>.\nVirtual methods for class <code>NavigationServer2D</code>.\nVirtual methods for class <code>NavigationServer3D</code>.\nVirtual methods for class <code>NinePatchRect</code>.\nVirtual methods for class <code>Node</code>.\nVirtual methods for class <code>Node2D</code>.\nVirtual methods for class <code>Node3D</code>.\nVirtual methods for class <code>Node3DGizmo</code>.\nVirtual methods for class <code>Noise</code>.\nVirtual methods for class <code>NoiseTexture2D</code>.\nVirtual methods for class <code>NoiseTexture3D</code>.\nVirtual methods for class <code>Object</code>.\nVirtual methods for class <code>Occluder3D</code>.\nVirtual methods for class <code>OccluderInstance3D</code>.\nVirtual methods for class <code>OccluderPolygon2D</code>.\nVirtual methods for class <code>OfflineMultiplayerPeer</code>.\nVirtual methods for class <code>OggPacketSequence</code>.\nVirtual methods for class <code>OggPacketSequencePlayback</code>.\nVirtual methods for class <code>OmniLight3D</code>.\nVirtual methods for class <code>OpenXrAction</code>.\nVirtual methods for class <code>OpenXrActionMap</code>.\nVirtual methods for class <code>OpenXrActionSet</code>.\nVirtual methods for class <code>OpenXrApiExtension</code>.\nVirtual methods for class <code>OpenXrCompositionLayer</code>.\nVirtual methods for class <code>OpenXrCompositionLayerCylinder</code>.\nVirtual methods for class <code>OpenXrCompositionLayerEquirect</code>.\nVirtual methods for class <code>OpenXrCompositionLayerQuad</code>.\nVirtual methods for class <code>OpenXrExtensionWrapperExtension</code>.\nVirtual methods for class <code>OpenXrHand</code>.\nVirtual methods for class <code>OpenXrInteractionProfile</code>.\nVirtual methods for class <code>OpenXrInteractionProfileMetadata</code>.\nVirtual methods for class <code>OpenXrInterface</code>.\nVirtual methods for class <code>OpenXrIpBinding</code>.\nVirtual methods for class <code>OptimizedTranslation</code>.\nVirtual methods for class <code>OptionButton</code>.\nVirtual methods for class <code>OrmMaterial3D</code>.\nVirtual methods for class <code>Os</code>.\nVirtual methods for class <code>PackedDataContainer</code>.\nVirtual methods for class <code>PackedDataContainerRef</code>.\nVirtual methods for class <code>PackedScene</code>.\nVirtual methods for class <code>PacketPeer</code>.\nVirtual methods for class <code>PacketPeerDtls</code>.\nVirtual methods for class <code>PacketPeerExtension</code>.\nVirtual methods for class <code>PacketPeerStream</code>.\nVirtual methods for class <code>PacketPeerUdp</code>.\nVirtual methods for class <code>Panel</code>.\nVirtual methods for class <code>PanelContainer</code>.\nVirtual methods for class <code>PanoramaSkyMaterial</code>.\nVirtual methods for class <code>Parallax2D</code>.\nVirtual methods for class <code>ParallaxBackground</code>.\nVirtual methods for class <code>ParallaxLayer</code>.\nVirtual methods for class <code>ParticleProcessMaterial</code>.\nVirtual methods for class <code>Path2D</code>.\nVirtual methods for class <code>Path3D</code>.\nVirtual methods for class <code>PathFollow2D</code>.\nVirtual methods for class <code>PathFollow3D</code>.\nVirtual methods for class <code>PckPacker</code>.\nVirtual methods for class <code>Performance</code>.\nVirtual methods for class <code>PhysicalBone2D</code>.\nVirtual methods for class <code>PhysicalBone3D</code>.\nVirtual methods for class <code>PhysicalBoneSimulator3D</code>.\nVirtual methods for class <code>PhysicalSkyMaterial</code>.\nVirtual methods for class <code>PhysicsBody2D</code>.\nVirtual methods for class <code>PhysicsBody3D</code>.\nVirtual methods for class <code>PhysicsDirectBodyState2D</code>.\nVirtual methods for class <code>PhysicsDirectBodyState2DExtension</code>…\nVirtual methods for class <code>PhysicsDirectBodyState3D</code>.\nVirtual methods for class <code>PhysicsDirectBodyState3DExtension</code>…\nVirtual methods for class <code>PhysicsDirectSpaceState2D</code>.\nVirtual methods for class …\nVirtual methods for class <code>PhysicsDirectSpaceState3D</code>.\nVirtual methods for class …\nVirtual methods for class <code>PhysicsMaterial</code>.\nVirtual methods for class <code>PhysicsPointQueryParameters2D</code>.\nVirtual methods for class <code>PhysicsPointQueryParameters3D</code>.\nVirtual methods for class <code>PhysicsRayQueryParameters2D</code>.\nVirtual methods for class <code>PhysicsRayQueryParameters3D</code>.\nVirtual methods for class <code>PhysicsServer2D</code>.\nVirtual methods for class <code>PhysicsServer2DExtension</code>.\nVirtual methods for class <code>PhysicsServer2DManager</code>.\nVirtual methods for class <code>PhysicsServer3D</code>.\nVirtual methods for class <code>PhysicsServer3DExtension</code>.\nVirtual methods for class <code>PhysicsServer3DManager</code>.\nVirtual methods for class …\nVirtual methods for class <code>PhysicsShapeQueryParameters2D</code>.\nVirtual methods for class <code>PhysicsShapeQueryParameters3D</code>.\nVirtual methods for class <code>PhysicsTestMotionParameters2D</code>.\nVirtual methods for class <code>PhysicsTestMotionParameters3D</code>.\nVirtual methods for class <code>PhysicsTestMotionResult2D</code>.\nVirtual methods for class <code>PhysicsTestMotionResult3D</code>.\nVirtual methods for class <code>PinJoint2D</code>.\nVirtual methods for class <code>PinJoint3D</code>.\nVirtual methods for class <code>PlaceholderCubemap</code>.\nVirtual methods for class <code>PlaceholderCubemapArray</code>.\nVirtual methods for class <code>PlaceholderMaterial</code>.\nVirtual methods for class <code>PlaceholderMesh</code>.\nVirtual methods for class <code>PlaceholderTexture2D</code>.\nVirtual methods for class <code>PlaceholderTexture2DArray</code>.\nVirtual methods for class <code>PlaceholderTexture3D</code>.\nVirtual methods for class <code>PlaceholderTextureLayered</code>.\nVirtual methods for class <code>PlaneMesh</code>.\nVirtual methods for class <code>PointLight2D</code>.\nVirtual methods for class <code>PointMesh</code>.\nVirtual methods for class <code>Polygon2D</code>.\nVirtual methods for class <code>PolygonOccluder3D</code>.\nVirtual methods for class <code>PolygonPathFinder</code>.\nVirtual methods for class <code>Popup</code>.\nVirtual methods for class <code>PopupMenu</code>.\nVirtual methods for class <code>PopupPanel</code>.\nVirtual methods for class <code>PortableCompressedTexture2D</code>.\nVirtual methods for class <code>PrimitiveMesh</code>.\nVirtual methods for class <code>PrismMesh</code>.\nVirtual methods for class <code>ProceduralSkyMaterial</code>.\nVirtual methods for class <code>ProgressBar</code>.\nVirtual methods for class <code>ProjectSettings</code>.\nVirtual methods for class <code>PropertyTweener</code>.\nVirtual methods for class <code>QuadMesh</code>.\nVirtual methods for class <code>QuadOccluder3D</code>.\nVirtual methods for class <code>RandomNumberGenerator</code>.\nVirtual methods for class <code>Range</code>.\nVirtual methods for class <code>RayCast2D</code>.\nVirtual methods for class <code>RayCast3D</code>.\nVirtual methods for class <code>RdAttachmentFormat</code>.\nVirtual methods for class <code>RdFramebufferPass</code>.\nVirtual methods for class <code>RdPipelineColorBlendState</code>.\nVirtual methods for class …\nVirtual methods for class <code>RdPipelineDepthStencilState</code>.\nVirtual methods for class <code>RdPipelineMultisampleState</code>.\nVirtual methods for class <code>RdPipelineRasterizationState</code>.\nVirtual methods for class <code>RdPipelineSpecializationConstant</code>.\nVirtual methods for class <code>RdSamplerState</code>.\nVirtual methods for class <code>RdShaderFile</code>.\nVirtual methods for class <code>RdShaderSource</code>.\nVirtual methods for class <code>RdShaderSpirv</code>.\nVirtual methods for class <code>RdTextureFormat</code>.\nVirtual methods for class <code>RdTextureView</code>.\nVirtual methods for class <code>RdUniform</code>.\nVirtual methods for class <code>RdVertexAttribute</code>.\nVirtual methods for class <code>RectangleShape2D</code>.\nVirtual methods for class <code>RefCounted</code>.\nVirtual methods for class <code>ReferenceRect</code>.\nVirtual methods for class <code>ReflectionProbe</code>.\nVirtual methods for class <code>RegEx</code>.\nVirtual methods for class <code>RegExMatch</code>.\nVirtual methods for class <code>RemoteTransform2D</code>.\nVirtual methods for class <code>RemoteTransform3D</code>.\nVirtual methods for class <code>RenderData</code>.\nVirtual methods for class <code>RenderDataExtension</code>.\nVirtual methods for class <code>RenderDataRd</code>.\nVirtual methods for class <code>RenderSceneBuffers</code>.\nVirtual methods for class <code>RenderSceneBuffersConfiguration</code>.\nVirtual methods for class <code>RenderSceneBuffersExtension</code>.\nVirtual methods for class <code>RenderSceneBuffersRd</code>.\nVirtual methods for class <code>RenderSceneData</code>.\nVirtual methods for class <code>RenderSceneDataExtension</code>.\nVirtual methods for class <code>RenderSceneDataRd</code>.\nVirtual methods for class <code>RenderingDevice</code>.\nVirtual methods for class <code>RenderingServer</code>.\nVirtual methods for class <code>Resource</code>.\nVirtual methods for class <code>ResourceFormatLoader</code>.\nVirtual methods for class <code>ResourceFormatSaver</code>.\nVirtual methods for class <code>ResourceImporter</code>.\nVirtual methods for class <code>ResourceImporterBitMap</code>.\nVirtual methods for class <code>ResourceImporterBmFont</code>.\nVirtual methods for class <code>ResourceImporterCsvTranslation</code>.\nVirtual methods for class <code>ResourceImporterDynamicFont</code>.\nVirtual methods for class <code>ResourceImporterImage</code>.\nVirtual methods for class <code>ResourceImporterImageFont</code>.\nVirtual methods for class <code>ResourceImporterLayeredTexture</code>.\nVirtual methods for class <code>ResourceImporterMp3</code>.\nVirtual methods for class <code>ResourceImporterObj</code>.\nVirtual methods for class <code>ResourceImporterOggVorbis</code>.\nVirtual methods for class <code>ResourceImporterScene</code>.\nVirtual methods for class <code>ResourceImporterShaderFile</code>.\nVirtual methods for class <code>ResourceImporterTexture</code>.\nVirtual methods for class <code>ResourceImporterTextureAtlas</code>.\nVirtual methods for class <code>ResourceImporterWav</code>.\nVirtual methods for class <code>ResourceLoader</code>.\nVirtual methods for class <code>ResourcePreloader</code>.\nVirtual methods for class <code>ResourceSaver</code>.\nVirtual methods for class <code>ResourceUid</code>.\nVirtual methods for class <code>RibbonTrailMesh</code>.\nVirtual methods for class <code>RichTextEffect</code>.\nVirtual methods for class <code>RichTextLabel</code>.\nVirtual methods for class <code>RigidBody2D</code>.\nVirtual methods for class <code>RigidBody3D</code>.\nVirtual methods for class <code>RootMotionView</code>.\nVirtual methods for class <code>SceneMultiplayer</code>.\nVirtual methods for class <code>SceneReplicationConfig</code>.\nVirtual methods for class <code>SceneState</code>.\nVirtual methods for class <code>SceneTree</code>.\nVirtual methods for class <code>SceneTreeTimer</code>.\nVirtual methods for class <code>Script</code>.\nVirtual methods for class <code>ScriptCreateDialog</code>.\nVirtual methods for class <code>ScriptEditor</code>.\nVirtual methods for class <code>ScriptEditorBase</code>.\nVirtual methods for class <code>ScriptExtension</code>.\nVirtual methods for class <code>ScriptLanguage</code>.\nVirtual methods for class <code>ScriptLanguageExtension</code>.\nVirtual methods for class <code>ScrollBar</code>.\nVirtual methods for class <code>ScrollContainer</code>.\nVirtual methods for class <code>SegmentShape2D</code>.\nVirtual methods for class <code>SeparationRayShape2D</code>.\nVirtual methods for class <code>SeparationRayShape3D</code>.\nVirtual methods for class <code>Separator</code>.\nVirtual methods for class <code>Shader</code>.\nVirtual methods for class <code>ShaderGlobalsOverride</code>.\nVirtual methods for class <code>ShaderInclude</code>.\nVirtual methods for class <code>ShaderMaterial</code>.\nVirtual methods for class <code>Shape2D</code>.\nVirtual methods for class <code>Shape3D</code>.\nVirtual methods for class <code>ShapeCast2D</code>.\nVirtual methods for class <code>ShapeCast3D</code>.\nVirtual methods for class <code>Shortcut</code>.\nVirtual methods for class <code>Skeleton2D</code>.\nVirtual methods for class <code>Skeleton3D</code>.\nVirtual methods for class <code>SkeletonIk3d</code>.\nVirtual methods for class <code>SkeletonModification2D</code>.\nVirtual methods for class <code>SkeletonModification2DJiggle</code>.\nVirtual methods for class <code>SkeletonModification2DLookAt</code>.\nVirtual methods for class …\nVirtual methods for class <code>SkeletonModification2DStackHolder</code>…\nVirtual methods for class <code>SkeletonModification2DTwoBoneIk</code>.\nVirtual methods for class <code>SkeletonModification2Dccdik</code>.\nVirtual methods for class <code>SkeletonModification2Dfabrik</code>.\nVirtual methods for class <code>SkeletonModificationStack2D</code>.\nVirtual methods for class <code>SkeletonModifier3D</code>.\nVirtual methods for class <code>SkeletonProfile</code>.\nVirtual methods for class <code>SkeletonProfileHumanoid</code>.\nVirtual methods for class <code>Skin</code>.\nVirtual methods for class <code>SkinReference</code>.\nVirtual methods for class <code>Sky</code>.\nVirtual methods for class <code>Slider</code>.\nVirtual methods for class <code>SliderJoint3D</code>.\nVirtual methods for class <code>SoftBody3D</code>.\nVirtual methods for class <code>SphereMesh</code>.\nVirtual methods for class <code>SphereOccluder3D</code>.\nVirtual methods for class <code>SphereShape3D</code>.\nVirtual methods for class <code>SpinBox</code>.\nVirtual methods for class <code>SplitContainer</code>.\nVirtual methods for class <code>SpotLight3D</code>.\nVirtual methods for class <code>SpringArm3D</code>.\nVirtual methods for class <code>Sprite2D</code>.\nVirtual methods for class <code>Sprite3D</code>.\nVirtual methods for class <code>SpriteBase3D</code>.\nVirtual methods for class <code>SpriteFrames</code>.\nVirtual methods for class <code>StandardMaterial3D</code>.\nVirtual methods for class <code>StaticBody2D</code>.\nVirtual methods for class <code>StaticBody3D</code>.\nVirtual methods for class <code>StatusIndicator</code>.\nVirtual methods for class <code>StreamPeer</code>.\nVirtual methods for class <code>StreamPeerBuffer</code>.\nVirtual methods for class <code>StreamPeerExtension</code>.\nVirtual methods for class <code>StreamPeerGzip</code>.\nVirtual methods for class <code>StreamPeerTcp</code>.\nVirtual methods for class <code>StreamPeerTls</code>.\nVirtual methods for class <code>StyleBox</code>.\nVirtual methods for class <code>StyleBoxEmpty</code>.\nVirtual methods for class <code>StyleBoxFlat</code>.\nVirtual methods for class <code>StyleBoxLine</code>.\nVirtual methods for class <code>StyleBoxTexture</code>.\nVirtual methods for class <code>SubViewport</code>.\nVirtual methods for class <code>SubViewportContainer</code>.\nVirtual methods for class <code>SurfaceTool</code>.\nVirtual methods for class <code>SyntaxHighlighter</code>.\nVirtual methods for class <code>SystemFont</code>.\nVirtual methods for class <code>TabBar</code>.\nVirtual methods for class <code>TabContainer</code>.\nVirtual methods for class <code>TcpServer</code>.\nVirtual methods for class <code>TextEdit</code>.\nVirtual methods for class <code>TextLine</code>.\nVirtual methods for class <code>TextMesh</code>.\nVirtual methods for class <code>TextParagraph</code>.\nVirtual methods for class <code>TextServer</code>.\nVirtual methods for class <code>TextServerAdvanced</code>.\nVirtual methods for class <code>TextServerDummy</code>.\nVirtual methods for class <code>TextServerExtension</code>.\nVirtual methods for class <code>TextServerManager</code>.\nVirtual methods for class <code>Texture</code>.\nVirtual methods for class <code>Texture2D</code>.\nVirtual methods for class <code>Texture2DArray</code>.\nVirtual methods for class <code>Texture2DArrayRd</code>.\nVirtual methods for class <code>Texture2Drd</code>.\nVirtual methods for class <code>Texture3D</code>.\nVirtual methods for class <code>Texture3Drd</code>.\nVirtual methods for class <code>TextureButton</code>.\nVirtual methods for class <code>TextureCubemapArrayRd</code>.\nVirtual methods for class <code>TextureCubemapRd</code>.\nVirtual methods for class <code>TextureLayered</code>.\nVirtual methods for class <code>TextureLayeredRd</code>.\nVirtual methods for class <code>TextureProgressBar</code>.\nVirtual methods for class <code>TextureRect</code>.\nVirtual methods for class <code>Theme</code>.\nVirtual methods for class <code>ThemeDb</code>.\nVirtual methods for class <code>TileData</code>.\nVirtual methods for class <code>TileMap</code>.\nVirtual methods for class <code>TileMapLayer</code>.\nVirtual methods for class <code>TileMapPattern</code>.\nVirtual methods for class <code>TileSet</code>.\nVirtual methods for class <code>TileSetAtlasSource</code>.\nVirtual methods for class <code>TileSetScenesCollectionSource</code>.\nVirtual methods for class <code>TileSetSource</code>.\nVirtual methods for class <code>Time</code>.\nVirtual methods for class <code>Timer</code>.\nVirtual methods for class <code>TlsOptions</code>.\nVirtual methods for class <code>TorusMesh</code>.\nVirtual methods for class <code>TouchScreenButton</code>.\nVirtual methods for class <code>Translation</code>.\nVirtual methods for class <code>TranslationServer</code>.\nVirtual methods for class <code>Tree</code>.\nVirtual methods for class <code>TreeItem</code>.\nVirtual methods for class <code>TriangleMesh</code>.\nVirtual methods for class <code>TubeTrailMesh</code>.\nVirtual methods for class <code>Tween</code>.\nVirtual methods for class <code>Tweener</code>.\nVirtual methods for class <code>UdpServer</code>.\nVirtual methods for class <code>UndoRedo</code>.\nVirtual methods for class <code>UniformSetCacheRd</code>.\nVirtual methods for class <code>Upnp</code>.\nVirtual methods for class <code>UpnpDevice</code>.\nVirtual methods for class <code>VBoxContainer</code>.\nVirtual methods for class <code>VFlowContainer</code>.\nVirtual methods for class <code>VScrollBar</code>.\nVirtual methods for class <code>VSeparator</code>.\nVirtual methods for class <code>VSlider</code>.\nVirtual methods for class <code>VSplitContainer</code>.\nVirtual methods for class <code>VehicleBody3D</code>.\nVirtual methods for class <code>VehicleWheel3D</code>.\nVirtual methods for class <code>VideoStream</code>.\nVirtual methods for class <code>VideoStreamPlayback</code>.\nVirtual methods for class <code>VideoStreamPlayer</code>.\nVirtual methods for class <code>VideoStreamTheora</code>.\nVirtual methods for class <code>Viewport</code>.\nVirtual methods for class <code>ViewportTexture</code>.\nVirtual methods for class <code>VisibleOnScreenEnabler2D</code>.\nVirtual methods for class <code>VisibleOnScreenEnabler3D</code>.\nVirtual methods for class <code>VisibleOnScreenNotifier2D</code>.\nVirtual methods for class <code>VisibleOnScreenNotifier3D</code>.\nVirtual methods for class <code>VisualInstance3D</code>.\nVirtual methods for class <code>VisualShader</code>.\nVirtual methods for class <code>VisualShaderNode</code>.\nVirtual methods for class <code>VisualShaderNodeBillboard</code>.\nVirtual methods for class <code>VisualShaderNodeBooleanConstant</code>.\nVirtual methods for class <code>VisualShaderNodeBooleanParameter</code>.\nVirtual methods for class <code>VisualShaderNodeClamp</code>.\nVirtual methods for class <code>VisualShaderNodeColorConstant</code>.\nVirtual methods for class <code>VisualShaderNodeColorFunc</code>.\nVirtual methods for class <code>VisualShaderNodeColorOp</code>.\nVirtual methods for class <code>VisualShaderNodeColorParameter</code>.\nVirtual methods for class <code>VisualShaderNodeComment</code>.\nVirtual methods for class <code>VisualShaderNodeCompare</code>.\nVirtual methods for class <code>VisualShaderNodeConstant</code>.\nVirtual methods for class <code>VisualShaderNodeCubemap</code>.\nVirtual methods for class <code>VisualShaderNodeCubemapParameter</code>.\nVirtual methods for class <code>VisualShaderNodeCurveTexture</code>.\nVirtual methods for class <code>VisualShaderNodeCurveXyzTexture</code>.\nVirtual methods for class <code>VisualShaderNodeCustom</code>.\nVirtual methods for class <code>VisualShaderNodeDerivativeFunc</code>.\nVirtual methods for class <code>VisualShaderNodeDeterminant</code>.\nVirtual methods for class <code>VisualShaderNodeDistanceFade</code>.\nVirtual methods for class <code>VisualShaderNodeDotProduct</code>.\nVirtual methods for class <code>VisualShaderNodeExpression</code>.\nVirtual methods for class <code>VisualShaderNodeFaceForward</code>.\nVirtual methods for class <code>VisualShaderNodeFloatConstant</code>.\nVirtual methods for class <code>VisualShaderNodeFloatFunc</code>.\nVirtual methods for class <code>VisualShaderNodeFloatOp</code>.\nVirtual methods for class <code>VisualShaderNodeFloatParameter</code>.\nVirtual methods for class <code>VisualShaderNodeFrame</code>.\nVirtual methods for class <code>VisualShaderNodeFresnel</code>.\nVirtual methods for class <code>VisualShaderNodeGlobalExpression</code>.\nVirtual methods for class <code>VisualShaderNodeGroupBase</code>.\nVirtual methods for class <code>VisualShaderNodeIf</code>.\nVirtual methods for class <code>VisualShaderNodeInput</code>.\nVirtual methods for class <code>VisualShaderNodeIntConstant</code>.\nVirtual methods for class <code>VisualShaderNodeIntFunc</code>.\nVirtual methods for class <code>VisualShaderNodeIntOp</code>.\nVirtual methods for class <code>VisualShaderNodeIntParameter</code>.\nVirtual methods for class <code>VisualShaderNodeIs</code>.\nVirtual methods for class <code>VisualShaderNodeLinearSceneDepth</code>.\nVirtual methods for class <code>VisualShaderNodeMix</code>.\nVirtual methods for class <code>VisualShaderNodeMultiplyAdd</code>.\nVirtual methods for class <code>VisualShaderNodeOuterProduct</code>.\nVirtual methods for class <code>VisualShaderNodeOutput</code>.\nVirtual methods for class <code>VisualShaderNodeParameter</code>.\nVirtual methods for class <code>VisualShaderNodeParameterRef</code>.\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeParticleEmit</code>.\nVirtual methods for class <code>VisualShaderNodeParticleEmitter</code>.\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeParticleOutput</code>.\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeProximityFade</code>.\nVirtual methods for class <code>VisualShaderNodeRandomRange</code>.\nVirtual methods for class <code>VisualShaderNodeRemap</code>.\nVirtual methods for class <code>VisualShaderNodeReroute</code>.\nVirtual methods for class <code>VisualShaderNodeResizableBase</code>.\nVirtual methods for class <code>VisualShaderNodeRotationByAxis</code>.\nVirtual methods for class <code>VisualShaderNodeSample3D</code>.\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeScreenUvToSdf</code>.\nVirtual methods for class <code>VisualShaderNodeSdfRaymarch</code>.\nVirtual methods for class <code>VisualShaderNodeSdfToScreenUv</code>.\nVirtual methods for class <code>VisualShaderNodeSmoothStep</code>.\nVirtual methods for class <code>VisualShaderNodeStep</code>.\nVirtual methods for class <code>VisualShaderNodeSwitch</code>.\nVirtual methods for class <code>VisualShaderNodeTexture</code>.\nVirtual methods for class <code>VisualShaderNodeTexture2DArray</code>.\nVirtual methods for class …\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeTexture3D</code>.\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeTextureParameter</code>.\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeTextureSdf</code>.\nVirtual methods for class <code>VisualShaderNodeTextureSdfNormal</code>.\nVirtual methods for class <code>VisualShaderNodeTransformCompose</code>.\nVirtual methods for class <code>VisualShaderNodeTransformConstant</code>…\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeTransformFunc</code>.\nVirtual methods for class <code>VisualShaderNodeTransformOp</code>.\nVirtual methods for class …\nVirtual methods for class <code>VisualShaderNodeTransformVecMult</code>.\nVirtual methods for class <code>VisualShaderNodeUIntConstant</code>.\nVirtual methods for class <code>VisualShaderNodeUIntFunc</code>.\nVirtual methods for class <code>VisualShaderNodeUIntOp</code>.\nVirtual methods for class <code>VisualShaderNodeUIntParameter</code>.\nVirtual methods for class <code>VisualShaderNodeUvFunc</code>.\nVirtual methods for class <code>VisualShaderNodeUvPolarCoord</code>.")